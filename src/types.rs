use crate::bitboard;

// types, enums, structs

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum Direction {
    N,
    S,
    E,
    W,
    NE,
    NW,
    SE,
    SW
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum GamePhase {
    Middlegame,
    Endgame
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum KnightHop {
    NNW,
    NNE,
    NWW,
    NEE,
    SSW,
    SSE,
    SWW,
    SEE
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum Square {
    A1, B1, C1, D1, E1, F1, G1, H1,
    A2, B2, C2, D2, E2, F2, G2, H2,
    A3, B3, C3, D3, E3, F3, G3, H3,
    A4, B4, C4, D4, E4, F4, G4, H4,
    A5, B5, C5, D5, E5, F5, G5, H5,
    A6, B6, C6, D6, E6, F6, G6, H6,
    A7, B7, C7, D7, E7, F7, G7, H7,
    A8, B8, C8, D8, E8, F8, G8, H8
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum Rank {
    Rank1,
    Rank2,
    Rank3,
    Rank4,
    Rank5,
    Rank6,
    Rank7,
    Rank8
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum File {
    FileA,
    FileB,
    FileC,
    FileD,
    FileE,
    FileF,
    FileG,
    FileH
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum Color {
    White,
    Black
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub enum PieceType {
    King,
    Queen,
    Rook,
    Bishop,
    Knight,
    Pawn,
    Null // we use a "Null" piece type after a piece has been captured
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub struct Piece {
    pub color: Color,
    pub piece_type: PieceType,
    pub square: Square
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub struct CastlingRights {
    pub white_long: bool,
    pub white_short: bool,
    pub black_long: bool,
    pub black_short: bool
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub struct Board {
    pub white_bitboard_pieces: bitboard::Pieces,
    pub black_bitboard_pieces: bitboard::Pieces,
    pub white_pieces: [Piece; 16],
    pub black_pieces: [Piece; 16],
    pub castling_rights: CastlingRights,
    pub turn: Color,
    //pub moves: [Move; 16];
}

#[derive(Debug, PartialEq, Copy, Clone)]
pub struct Move {
    pub from_square: Square,
    pub to_square: Square,
    pub promote_type: PieceType
}

// constants

pub const KING_DIRECTIONS: [Direction; 8] = [Direction::N, Direction::S, Direction::E, Direction::W, Direction::NW, Direction::NE, Direction::SW, Direction::SE];
pub const QUEEN_DIRECTIONS: [Direction; 8] = [Direction::N, Direction::S, Direction::E, Direction::W, Direction::NW, Direction::NE, Direction::SW, Direction::SE];
pub const ROOK_DIRECTIONS: [Direction; 4] = [Direction::N, Direction::S, Direction::E, Direction::W];
pub const BISHOP_DIRECTIONS: [Direction; 4] = [Direction::NW, Direction::NE, Direction::SW, Direction::SE];
pub const KNIGHT_HOPS: [KnightHop; 8] = [KnightHop::NNW, KnightHop::NNE, KnightHop::NWW, KnightHop::NEE, KnightHop::SSW, KnightHop::SSE, KnightHop::SWW, KnightHop::SEE];

// Functions
impl Board {
    pub fn get_piece_at(&self, square: Square) -> Option<&Piece> {
        for p in self.white_pieces.iter() {
            if p.square == square && p.piece_type != PieceType::Null {
                return Some(p);
            }
        }
        for p in self.black_pieces.iter() {
            if p.square == square && p.piece_type != PieceType::Null {
                return Some(p);
            }
        }
        return None;
    }

    pub fn pretty_print(&self) {
        let mut pieces : [Piece; 64] = [Piece{color: Color::White, piece_type: PieceType::Null, square: Square::A1}; 64];
        for p in self.white_pieces.iter() {
            if (p.piece_type != PieceType::Null) {
                pieces[p.square.to_index()] = *p;
            }
        }
        for p in self.black_pieces.iter() {
            if (p.piece_type != PieceType::Null) {
                pieces[p.square.to_index()] = *p;
            }
        }
        print!("8   ");
        for i in 56..64 {
            print!("{} ", pieces[i].to_char())
        }
        print!("\n7   ");
        for i in 48..56 {
            print!("{} ", pieces[i].to_char())
        }
        print!("\n6   ");
        for i in 40..48 {
            print!("{} ", pieces[i].to_char())
        }
        print!("\n5   ");
        for i in 32..40 {
            print!("{} ", pieces[i].to_char())
        }
        print!("\n4   ");
        for i in 24..32 {
            print!("{} ", pieces[i].to_char())
        }
        print!("\n3   ");
        for i in 16..24 {
            print!("{} ", pieces[i].to_char())
        }
        print!("\n2   ");
        for i in 8..16 {
            print!("{} ", pieces[i].to_char())
        }
        print!("\n1   ");
        for i in 0..8 {
            print!("{} ", pieces[i].to_char())
        }
        println!("\n\n    A B C D E F G H");
    }
}

impl Square {
    pub fn from_uci(s: &str) -> Option<Square> {
        return match (s.to_uppercase().as_str()) {
            "A1" => Some(Square::A1),
            "B1" => Some(Square::B1),
            "C1" => Some(Square::C1),
            "D1" => Some(Square::D1),
            "E1" => Some(Square::E1),
            "F1" => Some(Square::F1),
            "G1" => Some(Square::G1),
            "H1" => Some(Square::H1),
            "A2" => Some(Square::A2),
            "B2" => Some(Square::B2),
            "C2" => Some(Square::C2),
            "D2" => Some(Square::D2),
            "E2" => Some(Square::E2),
            "F2" => Some(Square::F2),
            "G2" => Some(Square::G2),
            "H2" => Some(Square::H2),
            "A3" => Some(Square::A3),
            "B3" => Some(Square::B3),
            "C3" => Some(Square::C3),
            "D3" => Some(Square::D3),
            "E3" => Some(Square::E3),
            "F3" => Some(Square::F3),
            "G3" => Some(Square::G3),
            "H3" => Some(Square::H3),
            "A4" => Some(Square::A4),
            "B4" => Some(Square::B4),
            "C4" => Some(Square::C4),
            "D4" => Some(Square::D4),
            "E4" => Some(Square::E4),
            "F4" => Some(Square::F4),
            "G4" => Some(Square::G4),
            "H4" => Some(Square::H4),
            "A5" => Some(Square::A5),
            "B5" => Some(Square::B5),
            "C5" => Some(Square::C5),
            "D5" => Some(Square::D5),
            "E5" => Some(Square::E5),
            "F5" => Some(Square::F5),
            "G5" => Some(Square::G5),
            "H5" => Some(Square::H5),
            "A6" => Some(Square::A6),
            "B6" => Some(Square::B6),
            "C6" => Some(Square::C6),
            "D6" => Some(Square::D6),
            "E6" => Some(Square::E6),
            "F6" => Some(Square::F6),
            "G6" => Some(Square::G6),
            "H6" => Some(Square::H6),
            "A7" => Some(Square::A7),
            "B7" => Some(Square::B7),
            "C7" => Some(Square::C7),
            "D7" => Some(Square::D7),
            "E7" => Some(Square::E7),
            "F7" => Some(Square::F7),
            "G7" => Some(Square::G7),
            "H7" => Some(Square::H7),
            "A8" => Some(Square::A8),
            "B8" => Some(Square::B8),
            "C8" => Some(Square::C8),
            "D8" => Some(Square::D8),
            "E8" => Some(Square::E8),
            "F8" => Some(Square::F8),
            "G8" => Some(Square::G8),
            "H8" => Some(Square::H8),
            _ => None
        }
    }

    pub fn to_uci(&self) -> &str {
        return match self {
            Square::A1 => "a1",
            Square::B1 => "b1",
            Square::C1 => "c1",
            Square::D1 => "d1",
            Square::E1 => "e1",
            Square::F1 => "f1",
            Square::G1 => "g1",
            Square::H1 => "h1",
            Square::A2 => "a2",
            Square::B2 => "b2",
            Square::C2 => "c2",
            Square::D2 => "d2",
            Square::E2 => "e2",
            Square::F2 => "f2",
            Square::G2 => "g2",
            Square::H2 => "h2",
            Square::A3 => "a3",
            Square::B3 => "b3",
            Square::C3 => "c3",
            Square::D3 => "d3",
            Square::E3 => "e3",
            Square::F3 => "f3",
            Square::G3 => "g3",
            Square::H3 => "h3",
            Square::A4 => "a4",
            Square::B4 => "b4",
            Square::C4 => "c4",
            Square::D4 => "d4",
            Square::E4 => "e4",
            Square::F4 => "f4",
            Square::G4 => "g4",
            Square::H4 => "h4",
            Square::A5 => "a5",
            Square::B5 => "b5",
            Square::C5 => "c5",
            Square::D5 => "d5",
            Square::E5 => "e5",
            Square::F5 => "f5",
            Square::G5 => "g5",
            Square::H5 => "h5",
            Square::A6 => "a6",
            Square::B6 => "b6",
            Square::C6 => "c6",
            Square::D6 => "d6",
            Square::E6 => "e6",
            Square::F6 => "f6",
            Square::G6 => "g6",
            Square::H6 => "h6",
            Square::A7 => "a7",
            Square::B7 => "b7",
            Square::C7 => "c7",
            Square::D7 => "d7",
            Square::E7 => "e7",
            Square::F7 => "f7",
            Square::G7 => "g7",
            Square::H7 => "h7",
            Square::A8 => "a8",
            Square::B8 => "b8",
            Square::C8 => "c8",
            Square::D8 => "d8",
            Square::E8 => "e8",
            Square::F8 => "f8",
            Square::G8 => "g8",
            Square::H8 => "h8"
        }
    }

    pub fn to_index(&self) -> usize {
        return match self {
            Square::A1 => 0x00usize,
            Square::B1 => 0x01usize,
            Square::C1 => 0x02usize,
            Square::D1 => 0x03usize,
            Square::E1 => 0x04usize,
            Square::F1 => 0x05usize,
            Square::G1 => 0x06usize,
            Square::H1 => 0x07usize,
            Square::A2 => 0x08usize,
            Square::B2 => 0x09usize,
            Square::C2 => 0x0Ausize,
            Square::D2 => 0x0Busize,
            Square::E2 => 0x0Cusize,
            Square::F2 => 0x0Dusize,
            Square::G2 => 0x0Eusize,
            Square::H2 => 0x0Fusize,
            Square::A3 => 0x10usize,
            Square::B3 => 0x11usize,
            Square::C3 => 0x12usize,
            Square::D3 => 0x13usize,
            Square::E3 => 0x14usize,
            Square::F3 => 0x15usize,
            Square::G3 => 0x16usize,
            Square::H3 => 0x17usize,
            Square::A4 => 0x18usize,
            Square::B4 => 0x19usize,
            Square::C4 => 0x1Ausize,
            Square::D4 => 0x1Busize,
            Square::E4 => 0x1Cusize,
            Square::F4 => 0x1Dusize,
            Square::G4 => 0x1Eusize,
            Square::H4 => 0x1Fusize,
            Square::A5 => 0x20usize,
            Square::B5 => 0x21usize,
            Square::C5 => 0x22usize,
            Square::D5 => 0x23usize,
            Square::E5 => 0x24usize,
            Square::F5 => 0x25usize,
            Square::G5 => 0x26usize,
            Square::H5 => 0x27usize,
            Square::A6 => 0x28usize,
            Square::B6 => 0x29usize,
            Square::C6 => 0x2Ausize,
            Square::D6 => 0x2Busize,
            Square::E6 => 0x2Cusize,
            Square::F6 => 0x2Dusize,
            Square::G6 => 0x2Eusize,
            Square::H6 => 0x2Fusize,
            Square::A7 => 0x30usize,
            Square::B7 => 0x31usize,
            Square::C7 => 0x32usize,
            Square::D7 => 0x33usize,
            Square::E7 => 0x34usize,
            Square::F7 => 0x35usize,
            Square::G7 => 0x36usize,
            Square::H7 => 0x37usize,
            Square::A8 => 0x38usize,
            Square::B8 => 0x39usize,
            Square::C8 => 0x3Ausize,
            Square::D8 => 0x3Busize,
            Square::E8 => 0x3Cusize,
            Square::F8 => 0x3Dusize,
            Square::G8 => 0x3Eusize,
            Square::H8 => 0x3Fusize
        }
    }

    pub fn get_rank(&self) -> Rank {
        return match self {
            Square::A1 => Rank::Rank1,
            Square::B1 => Rank::Rank1,
            Square::C1 => Rank::Rank1,
            Square::D1 => Rank::Rank1,
            Square::E1 => Rank::Rank1,
            Square::F1 => Rank::Rank1,
            Square::G1 => Rank::Rank1,
            Square::H1 => Rank::Rank1,
            Square::A2 => Rank::Rank2,
            Square::B2 => Rank::Rank2,
            Square::C2 => Rank::Rank2,
            Square::D2 => Rank::Rank2,
            Square::E2 => Rank::Rank2,
            Square::F2 => Rank::Rank2,
            Square::G2 => Rank::Rank2,
            Square::H2 => Rank::Rank2,
            Square::A3 => Rank::Rank3,
            Square::B3 => Rank::Rank3,
            Square::C3 => Rank::Rank3,
            Square::D3 => Rank::Rank3,
            Square::E3 => Rank::Rank3,
            Square::F3 => Rank::Rank3,
            Square::G3 => Rank::Rank3,
            Square::H3 => Rank::Rank3,
            Square::A4 => Rank::Rank4,
            Square::B4 => Rank::Rank4,
            Square::C4 => Rank::Rank4,
            Square::D4 => Rank::Rank4,
            Square::E4 => Rank::Rank4,
            Square::F4 => Rank::Rank4,
            Square::G4 => Rank::Rank4,
            Square::H4 => Rank::Rank4,
            Square::A5 => Rank::Rank5,
            Square::B5 => Rank::Rank5,
            Square::C5 => Rank::Rank5,
            Square::D5 => Rank::Rank5,
            Square::E5 => Rank::Rank5,
            Square::F5 => Rank::Rank5,
            Square::G5 => Rank::Rank5,
            Square::H5 => Rank::Rank5,
            Square::A6 => Rank::Rank6,
            Square::B6 => Rank::Rank6,
            Square::C6 => Rank::Rank6,
            Square::D6 => Rank::Rank6,
            Square::E6 => Rank::Rank6,
            Square::F6 => Rank::Rank6,
            Square::G6 => Rank::Rank6,
            Square::H6 => Rank::Rank6,
            Square::A7 => Rank::Rank7,
            Square::B7 => Rank::Rank7,
            Square::C7 => Rank::Rank7,
            Square::D7 => Rank::Rank7,
            Square::E7 => Rank::Rank7,
            Square::F7 => Rank::Rank7,
            Square::G7 => Rank::Rank7,
            Square::H7 => Rank::Rank7,
            Square::A8 => Rank::Rank8,
            Square::B8 => Rank::Rank8,
            Square::C8 => Rank::Rank8,
            Square::D8 => Rank::Rank8,
            Square::E8 => Rank::Rank8,
            Square::F8 => Rank::Rank8,
            Square::G8 => Rank::Rank8,
            Square::H8 => Rank::Rank8
        }
    }

    pub fn get_file(&self) -> File {
        return match self {
            Square::A1 => File::FileA,
            Square::B1 => File::FileB,
            Square::C1 => File::FileC,
            Square::D1 => File::FileD,
            Square::E1 => File::FileE,
            Square::F1 => File::FileF,
            Square::G1 => File::FileG,
            Square::H1 => File::FileH,
            Square::A2 => File::FileA,
            Square::B2 => File::FileB,
            Square::C2 => File::FileC,
            Square::D2 => File::FileD,
            Square::E2 => File::FileE,
            Square::F2 => File::FileF,
            Square::G2 => File::FileG,
            Square::H2 => File::FileH,
            Square::A3 => File::FileA,
            Square::B3 => File::FileB,
            Square::C3 => File::FileC,
            Square::D3 => File::FileD,
            Square::E3 => File::FileE,
            Square::F3 => File::FileF,
            Square::G3 => File::FileG,
            Square::H3 => File::FileH,
            Square::A4 => File::FileA,
            Square::B4 => File::FileB,
            Square::C4 => File::FileC,
            Square::D4 => File::FileD,
            Square::E4 => File::FileE,
            Square::F4 => File::FileF,
            Square::G4 => File::FileG,
            Square::H4 => File::FileH,
            Square::A5 => File::FileA,
            Square::B5 => File::FileB,
            Square::C5 => File::FileC,
            Square::D5 => File::FileD,
            Square::E5 => File::FileE,
            Square::F5 => File::FileF,
            Square::G5 => File::FileG,
            Square::H5 => File::FileH,
            Square::A6 => File::FileA,
            Square::B6 => File::FileB,
            Square::C6 => File::FileC,
            Square::D6 => File::FileD,
            Square::E6 => File::FileE,
            Square::F6 => File::FileF,
            Square::G6 => File::FileG,
            Square::H6 => File::FileH,
            Square::A7 => File::FileA,
            Square::B7 => File::FileB,
            Square::C7 => File::FileC,
            Square::D7 => File::FileD,
            Square::E7 => File::FileE,
            Square::F7 => File::FileF,
            Square::G7 => File::FileG,
            Square::H7 => File::FileH,
            Square::A8 => File::FileA,
            Square::B8 => File::FileB,
            Square::C8 => File::FileC,
            Square::D8 => File::FileD,
            Square::E8 => File::FileE,
            Square::F8 => File::FileF,
            Square::G8 => File::FileG,
            Square::H8 => File::FileH
        }
    }

    pub fn slide(&self, dir: Direction, dist: i32) -> Option<Square> {
        let mut cur = Some(*self);
        for i in 1..(dist+1) {
            match (cur) {
                Some(x) => {
                    cur = match (x, dir) {
                        (Square::A1, Direction::N) => Some(Square::A2),
                        (Square::A1, Direction::S) => None,
                        (Square::A1, Direction::E) => Some(Square::B1),
                        (Square::A1, Direction::W) => None,
                        (Square::A1, Direction::NW) => None,
                        (Square::A1, Direction::NE) => Some(Square::B2),
                        (Square::A1, Direction::SW) => None,
                        (Square::A1, Direction::SE) => None,
                        (Square::B1, Direction::N) => Some(Square::B2),
                        (Square::B1, Direction::S) => None,
                        (Square::B1, Direction::E) => Some(Square::C1),
                        (Square::B1, Direction::W) => Some(Square::A1),
                        (Square::B1, Direction::NW) => Some(Square::A2),
                        (Square::B1, Direction::NE) => Some(Square::C2),
                        (Square::B1, Direction::SW) => None,
                        (Square::B1, Direction::SE) => None,
                        (Square::C1, Direction::N) => Some(Square::C2),
                        (Square::C1, Direction::S) => None,
                        (Square::C1, Direction::E) => Some(Square::D1),
                        (Square::C1, Direction::W) => Some(Square::B1),
                        (Square::C1, Direction::NW) => Some(Square::B2),
                        (Square::C1, Direction::NE) => Some(Square::D2),
                        (Square::C1, Direction::SW) => None,
                        (Square::C1, Direction::SE) => None,
                        (Square::D1, Direction::N) => Some(Square::D2),
                        (Square::D1, Direction::S) => None,
                        (Square::D1, Direction::E) => Some(Square::E1),
                        (Square::D1, Direction::W) => Some(Square::C1),
                        (Square::D1, Direction::NW) => Some(Square::C2),
                        (Square::D1, Direction::NE) => Some(Square::E2),
                        (Square::D1, Direction::SW) => None,
                        (Square::D1, Direction::SE) => None,
                        (Square::E1, Direction::N) => Some(Square::E2),
                        (Square::E1, Direction::S) => None,
                        (Square::E1, Direction::E) => Some(Square::F1),
                        (Square::E1, Direction::W) => Some(Square::D1),
                        (Square::E1, Direction::NW) => Some(Square::D2),
                        (Square::E1, Direction::NE) => Some(Square::F2),
                        (Square::E1, Direction::SW) => None,
                        (Square::E1, Direction::SE) => None,
                        (Square::F1, Direction::N) => Some(Square::F2),
                        (Square::F1, Direction::S) => None,
                        (Square::F1, Direction::E) => Some(Square::G1),
                        (Square::F1, Direction::W) => Some(Square::E1),
                        (Square::F1, Direction::NW) => Some(Square::E2),
                        (Square::F1, Direction::NE) => Some(Square::G2),
                        (Square::F1, Direction::SW) => None,
                        (Square::F1, Direction::SE) => None,
                        (Square::G1, Direction::N) => Some(Square::G2),
                        (Square::G1, Direction::S) => None,
                        (Square::G1, Direction::E) => Some(Square::H1),
                        (Square::G1, Direction::W) => Some(Square::F1),
                        (Square::G1, Direction::NW) => Some(Square::F2),
                        (Square::G1, Direction::NE) => Some(Square::H2),
                        (Square::G1, Direction::SW) => None,
                        (Square::G1, Direction::SE) => None,
                        (Square::H1, Direction::N) => Some(Square::H2),
                        (Square::H1, Direction::S) => None,
                        (Square::H1, Direction::E) => None,
                        (Square::H1, Direction::W) => Some(Square::G1),
                        (Square::H1, Direction::NW) => Some(Square::G2),
                        (Square::H1, Direction::NE) => None,
                        (Square::H1, Direction::SW) => None,
                        (Square::H1, Direction::SE) => None,
                        (Square::A2, Direction::N) => Some(Square::A3),
                        (Square::A2, Direction::S) => Some(Square::A1),
                        (Square::A2, Direction::E) => Some(Square::B2),
                        (Square::A2, Direction::W) => None,
                        (Square::A2, Direction::NW) => None,
                        (Square::A2, Direction::NE) => Some(Square::B3),
                        (Square::A2, Direction::SW) => None,
                        (Square::A2, Direction::SE) => Some(Square::B1),
                        (Square::B2, Direction::N) => Some(Square::B3),
                        (Square::B2, Direction::S) => Some(Square::B1),
                        (Square::B2, Direction::E) => Some(Square::C2),
                        (Square::B2, Direction::W) => Some(Square::A2),
                        (Square::B2, Direction::NW) => Some(Square::A3),
                        (Square::B2, Direction::NE) => Some(Square::C3),
                        (Square::B2, Direction::SW) => Some(Square::A1),
                        (Square::B2, Direction::SE) => Some(Square::C1),
                        (Square::C2, Direction::N) => Some(Square::C3),
                        (Square::C2, Direction::S) => Some(Square::C1),
                        (Square::C2, Direction::E) => Some(Square::D2),
                        (Square::C2, Direction::W) => Some(Square::B2),
                        (Square::C2, Direction::NW) => Some(Square::B3),
                        (Square::C2, Direction::NE) => Some(Square::D3),
                        (Square::C2, Direction::SW) => Some(Square::B1),
                        (Square::C2, Direction::SE) => Some(Square::D1),
                        (Square::D2, Direction::N) => Some(Square::D3),
                        (Square::D2, Direction::S) => Some(Square::D1),
                        (Square::D2, Direction::E) => Some(Square::E2),
                        (Square::D2, Direction::W) => Some(Square::C2),
                        (Square::D2, Direction::NW) => Some(Square::C3),
                        (Square::D2, Direction::NE) => Some(Square::E3),
                        (Square::D2, Direction::SW) => Some(Square::C1),
                        (Square::D2, Direction::SE) => Some(Square::E1),
                        (Square::E2, Direction::N) => Some(Square::E3),
                        (Square::E2, Direction::S) => Some(Square::E1),
                        (Square::E2, Direction::E) => Some(Square::F2),
                        (Square::E2, Direction::W) => Some(Square::D2),
                        (Square::E2, Direction::NW) => Some(Square::D3),
                        (Square::E2, Direction::NE) => Some(Square::F3),
                        (Square::E2, Direction::SW) => Some(Square::D1),
                        (Square::E2, Direction::SE) => Some(Square::F1),
                        (Square::F2, Direction::N) => Some(Square::F3),
                        (Square::F2, Direction::S) => Some(Square::F1),
                        (Square::F2, Direction::E) => Some(Square::G2),
                        (Square::F2, Direction::W) => Some(Square::E2),
                        (Square::F2, Direction::NW) => Some(Square::E3),
                        (Square::F2, Direction::NE) => Some(Square::G3),
                        (Square::F2, Direction::SW) => Some(Square::E1),
                        (Square::F2, Direction::SE) => Some(Square::G1),
                        (Square::G2, Direction::N) => Some(Square::G3),
                        (Square::G2, Direction::S) => Some(Square::G1),
                        (Square::G2, Direction::E) => Some(Square::H2),
                        (Square::G2, Direction::W) => Some(Square::F2),
                        (Square::G2, Direction::NW) => Some(Square::F3),
                        (Square::G2, Direction::NE) => Some(Square::H3),
                        (Square::G2, Direction::SW) => Some(Square::F1),
                        (Square::G2, Direction::SE) => Some(Square::H1),
                        (Square::H2, Direction::N) => Some(Square::H3),
                        (Square::H2, Direction::S) => Some(Square::H1),
                        (Square::H2, Direction::E) => None,
                        (Square::H2, Direction::W) => Some(Square::G2),
                        (Square::H2, Direction::NW) => Some(Square::G3),
                        (Square::H2, Direction::NE) => None,
                        (Square::H2, Direction::SW) => Some(Square::G1),
                        (Square::H2, Direction::SE) => None,
                        (Square::A3, Direction::N) => Some(Square::A4),
                        (Square::A3, Direction::S) => Some(Square::A2),
                        (Square::A3, Direction::E) => Some(Square::B3),
                        (Square::A3, Direction::W) => None,
                        (Square::A3, Direction::NW) => None,
                        (Square::A3, Direction::NE) => Some(Square::B4),
                        (Square::A3, Direction::SW) => None,
                        (Square::A3, Direction::SE) => Some(Square::B2),
                        (Square::B3, Direction::N) => Some(Square::B4),
                        (Square::B3, Direction::S) => Some(Square::B2),
                        (Square::B3, Direction::E) => Some(Square::C3),
                        (Square::B3, Direction::W) => Some(Square::A3),
                        (Square::B3, Direction::NW) => Some(Square::A4),
                        (Square::B3, Direction::NE) => Some(Square::C4),
                        (Square::B3, Direction::SW) => Some(Square::A2),
                        (Square::B3, Direction::SE) => Some(Square::C2),
                        (Square::C3, Direction::N) => Some(Square::C4),
                        (Square::C3, Direction::S) => Some(Square::C2),
                        (Square::C3, Direction::E) => Some(Square::D3),
                        (Square::C3, Direction::W) => Some(Square::B3),
                        (Square::C3, Direction::NW) => Some(Square::B4),
                        (Square::C3, Direction::NE) => Some(Square::D4),
                        (Square::C3, Direction::SW) => Some(Square::B2),
                        (Square::C3, Direction::SE) => Some(Square::D2),
                        (Square::D3, Direction::N) => Some(Square::D4),
                        (Square::D3, Direction::S) => Some(Square::D2),
                        (Square::D3, Direction::E) => Some(Square::E3),
                        (Square::D3, Direction::W) => Some(Square::C3),
                        (Square::D3, Direction::NW) => Some(Square::C4),
                        (Square::D3, Direction::NE) => Some(Square::E4),
                        (Square::D3, Direction::SW) => Some(Square::C2),
                        (Square::D3, Direction::SE) => Some(Square::E2),
                        (Square::E3, Direction::N) => Some(Square::E4),
                        (Square::E3, Direction::S) => Some(Square::E2),
                        (Square::E3, Direction::E) => Some(Square::F3),
                        (Square::E3, Direction::W) => Some(Square::D3),
                        (Square::E3, Direction::NW) => Some(Square::D4),
                        (Square::E3, Direction::NE) => Some(Square::F4),
                        (Square::E3, Direction::SW) => Some(Square::D2),
                        (Square::E3, Direction::SE) => Some(Square::F2),
                        (Square::F3, Direction::N) => Some(Square::F4),
                        (Square::F3, Direction::S) => Some(Square::F2),
                        (Square::F3, Direction::E) => Some(Square::G3),
                        (Square::F3, Direction::W) => Some(Square::E3),
                        (Square::F3, Direction::NW) => Some(Square::E4),
                        (Square::F3, Direction::NE) => Some(Square::G4),
                        (Square::F3, Direction::SW) => Some(Square::E2),
                        (Square::F3, Direction::SE) => Some(Square::G2),
                        (Square::G3, Direction::N) => Some(Square::G4),
                        (Square::G3, Direction::S) => Some(Square::G2),
                        (Square::G3, Direction::E) => Some(Square::H3),
                        (Square::G3, Direction::W) => Some(Square::F3),
                        (Square::G3, Direction::NW) => Some(Square::F4),
                        (Square::G3, Direction::NE) => Some(Square::H4),
                        (Square::G3, Direction::SW) => Some(Square::F2),
                        (Square::G3, Direction::SE) => Some(Square::H2),
                        (Square::H3, Direction::N) => Some(Square::H4),
                        (Square::H3, Direction::S) => Some(Square::H2),
                        (Square::H3, Direction::E) => None,
                        (Square::H3, Direction::W) => Some(Square::G3),
                        (Square::H3, Direction::NW) => Some(Square::G4),
                        (Square::H3, Direction::NE) => None,
                        (Square::H3, Direction::SW) => Some(Square::G2),
                        (Square::H3, Direction::SE) => None,
                        (Square::A4, Direction::N) => Some(Square::A5),
                        (Square::A4, Direction::S) => Some(Square::A3),
                        (Square::A4, Direction::E) => Some(Square::B4),
                        (Square::A4, Direction::W) => None,
                        (Square::A4, Direction::NW) => None,
                        (Square::A4, Direction::NE) => Some(Square::B5),
                        (Square::A4, Direction::SW) => None,
                        (Square::A4, Direction::SE) => Some(Square::B3),
                        (Square::B4, Direction::N) => Some(Square::B5),
                        (Square::B4, Direction::S) => Some(Square::B3),
                        (Square::B4, Direction::E) => Some(Square::C4),
                        (Square::B4, Direction::W) => Some(Square::A4),
                        (Square::B4, Direction::NW) => Some(Square::A5),
                        (Square::B4, Direction::NE) => Some(Square::C5),
                        (Square::B4, Direction::SW) => Some(Square::A3),
                        (Square::B4, Direction::SE) => Some(Square::C3),
                        (Square::C4, Direction::N) => Some(Square::C5),
                        (Square::C4, Direction::S) => Some(Square::C3),
                        (Square::C4, Direction::E) => Some(Square::D4),
                        (Square::C4, Direction::W) => Some(Square::B4),
                        (Square::C4, Direction::NW) => Some(Square::B5),
                        (Square::C4, Direction::NE) => Some(Square::D5),
                        (Square::C4, Direction::SW) => Some(Square::B3),
                        (Square::C4, Direction::SE) => Some(Square::D3),
                        (Square::D4, Direction::N) => Some(Square::D5),
                        (Square::D4, Direction::S) => Some(Square::D3),
                        (Square::D4, Direction::E) => Some(Square::E4),
                        (Square::D4, Direction::W) => Some(Square::C4),
                        (Square::D4, Direction::NW) => Some(Square::C5),
                        (Square::D4, Direction::NE) => Some(Square::E5),
                        (Square::D4, Direction::SW) => Some(Square::C3),
                        (Square::D4, Direction::SE) => Some(Square::E3),
                        (Square::E4, Direction::N) => Some(Square::E5),
                        (Square::E4, Direction::S) => Some(Square::E3),
                        (Square::E4, Direction::E) => Some(Square::F4),
                        (Square::E4, Direction::W) => Some(Square::D4),
                        (Square::E4, Direction::NW) => Some(Square::D5),
                        (Square::E4, Direction::NE) => Some(Square::F5),
                        (Square::E4, Direction::SW) => Some(Square::D3),
                        (Square::E4, Direction::SE) => Some(Square::F3),
                        (Square::F4, Direction::N) => Some(Square::F5),
                        (Square::F4, Direction::S) => Some(Square::F3),
                        (Square::F4, Direction::E) => Some(Square::G4),
                        (Square::F4, Direction::W) => Some(Square::E4),
                        (Square::F4, Direction::NW) => Some(Square::E5),
                        (Square::F4, Direction::NE) => Some(Square::G5),
                        (Square::F4, Direction::SW) => Some(Square::E3),
                        (Square::F4, Direction::SE) => Some(Square::G3),
                        (Square::G4, Direction::N) => Some(Square::G5),
                        (Square::G4, Direction::S) => Some(Square::G3),
                        (Square::G4, Direction::E) => Some(Square::H4),
                        (Square::G4, Direction::W) => Some(Square::F4),
                        (Square::G4, Direction::NW) => Some(Square::F5),
                        (Square::G4, Direction::NE) => Some(Square::H5),
                        (Square::G4, Direction::SW) => Some(Square::F3),
                        (Square::G4, Direction::SE) => Some(Square::H3),
                        (Square::H4, Direction::N) => Some(Square::H5),
                        (Square::H4, Direction::S) => Some(Square::H3),
                        (Square::H4, Direction::E) => None,
                        (Square::H4, Direction::W) => Some(Square::G4),
                        (Square::H4, Direction::NW) => Some(Square::G5),
                        (Square::H4, Direction::NE) => None,
                        (Square::H4, Direction::SW) => Some(Square::G3),
                        (Square::H4, Direction::SE) => None,
                        (Square::A5, Direction::N) => Some(Square::A6),
                        (Square::A5, Direction::S) => Some(Square::A4),
                        (Square::A5, Direction::E) => Some(Square::B5),
                        (Square::A5, Direction::W) => None,
                        (Square::A5, Direction::NW) => None,
                        (Square::A5, Direction::NE) => Some(Square::B6),
                        (Square::A5, Direction::SW) => None,
                        (Square::A5, Direction::SE) => Some(Square::B4),
                        (Square::B5, Direction::N) => Some(Square::B6),
                        (Square::B5, Direction::S) => Some(Square::B4),
                        (Square::B5, Direction::E) => Some(Square::C5),
                        (Square::B5, Direction::W) => Some(Square::A5),
                        (Square::B5, Direction::NW) => Some(Square::A6),
                        (Square::B5, Direction::NE) => Some(Square::C6),
                        (Square::B5, Direction::SW) => Some(Square::A4),
                        (Square::B5, Direction::SE) => Some(Square::C4),
                        (Square::C5, Direction::N) => Some(Square::C6),
                        (Square::C5, Direction::S) => Some(Square::C4),
                        (Square::C5, Direction::E) => Some(Square::D5),
                        (Square::C5, Direction::W) => Some(Square::B5),
                        (Square::C5, Direction::NW) => Some(Square::B6),
                        (Square::C5, Direction::NE) => Some(Square::D6),
                        (Square::C5, Direction::SW) => Some(Square::B4),
                        (Square::C5, Direction::SE) => Some(Square::D4),
                        (Square::D5, Direction::N) => Some(Square::D6),
                        (Square::D5, Direction::S) => Some(Square::D4),
                        (Square::D5, Direction::E) => Some(Square::E5),
                        (Square::D5, Direction::W) => Some(Square::C5),
                        (Square::D5, Direction::NW) => Some(Square::C6),
                        (Square::D5, Direction::NE) => Some(Square::E6),
                        (Square::D5, Direction::SW) => Some(Square::C4),
                        (Square::D5, Direction::SE) => Some(Square::E4),
                        (Square::E5, Direction::N) => Some(Square::E6),
                        (Square::E5, Direction::S) => Some(Square::E4),
                        (Square::E5, Direction::E) => Some(Square::F5),
                        (Square::E5, Direction::W) => Some(Square::D5),
                        (Square::E5, Direction::NW) => Some(Square::D6),
                        (Square::E5, Direction::NE) => Some(Square::F6),
                        (Square::E5, Direction::SW) => Some(Square::D4),
                        (Square::E5, Direction::SE) => Some(Square::F4),
                        (Square::F5, Direction::N) => Some(Square::F6),
                        (Square::F5, Direction::S) => Some(Square::F4),
                        (Square::F5, Direction::E) => Some(Square::G5),
                        (Square::F5, Direction::W) => Some(Square::E5),
                        (Square::F5, Direction::NW) => Some(Square::E6),
                        (Square::F5, Direction::NE) => Some(Square::G6),
                        (Square::F5, Direction::SW) => Some(Square::E4),
                        (Square::F5, Direction::SE) => Some(Square::G4),
                        (Square::G5, Direction::N) => Some(Square::G6),
                        (Square::G5, Direction::S) => Some(Square::G4),
                        (Square::G5, Direction::E) => Some(Square::H5),
                        (Square::G5, Direction::W) => Some(Square::F5),
                        (Square::G5, Direction::NW) => Some(Square::F6),
                        (Square::G5, Direction::NE) => Some(Square::H6),
                        (Square::G5, Direction::SW) => Some(Square::F4),
                        (Square::G5, Direction::SE) => Some(Square::H4),
                        (Square::H5, Direction::N) => Some(Square::H6),
                        (Square::H5, Direction::S) => Some(Square::H4),
                        (Square::H5, Direction::E) => None,
                        (Square::H5, Direction::W) => Some(Square::G5),
                        (Square::H5, Direction::NW) => Some(Square::G6),
                        (Square::H5, Direction::NE) => None,
                        (Square::H5, Direction::SW) => Some(Square::G4),
                        (Square::H5, Direction::SE) => None,
                        (Square::A6, Direction::N) => Some(Square::A7),
                        (Square::A6, Direction::S) => Some(Square::A5),
                        (Square::A6, Direction::E) => Some(Square::B6),
                        (Square::A6, Direction::W) => None,
                        (Square::A6, Direction::NW) => None,
                        (Square::A6, Direction::NE) => Some(Square::B7),
                        (Square::A6, Direction::SW) => None,
                        (Square::A6, Direction::SE) => Some(Square::B5),
                        (Square::B6, Direction::N) => Some(Square::B7),
                        (Square::B6, Direction::S) => Some(Square::B5),
                        (Square::B6, Direction::E) => Some(Square::C6),
                        (Square::B6, Direction::W) => Some(Square::A6),
                        (Square::B6, Direction::NW) => Some(Square::A7),
                        (Square::B6, Direction::NE) => Some(Square::C7),
                        (Square::B6, Direction::SW) => Some(Square::A5),
                        (Square::B6, Direction::SE) => Some(Square::C5),
                        (Square::C6, Direction::N) => Some(Square::C7),
                        (Square::C6, Direction::S) => Some(Square::C5),
                        (Square::C6, Direction::E) => Some(Square::D6),
                        (Square::C6, Direction::W) => Some(Square::B6),
                        (Square::C6, Direction::NW) => Some(Square::B7),
                        (Square::C6, Direction::NE) => Some(Square::D7),
                        (Square::C6, Direction::SW) => Some(Square::B5),
                        (Square::C6, Direction::SE) => Some(Square::D5),
                        (Square::D6, Direction::N) => Some(Square::D7),
                        (Square::D6, Direction::S) => Some(Square::D5),
                        (Square::D6, Direction::E) => Some(Square::E6),
                        (Square::D6, Direction::W) => Some(Square::C6),
                        (Square::D6, Direction::NW) => Some(Square::C7),
                        (Square::D6, Direction::NE) => Some(Square::E7),
                        (Square::D6, Direction::SW) => Some(Square::C5),
                        (Square::D6, Direction::SE) => Some(Square::E5),
                        (Square::E6, Direction::N) => Some(Square::E7),
                        (Square::E6, Direction::S) => Some(Square::E5),
                        (Square::E6, Direction::E) => Some(Square::F6),
                        (Square::E6, Direction::W) => Some(Square::D6),
                        (Square::E6, Direction::NW) => Some(Square::D7),
                        (Square::E6, Direction::NE) => Some(Square::F7),
                        (Square::E6, Direction::SW) => Some(Square::D5),
                        (Square::E6, Direction::SE) => Some(Square::F5),
                        (Square::F6, Direction::N) => Some(Square::F7),
                        (Square::F6, Direction::S) => Some(Square::F5),
                        (Square::F6, Direction::E) => Some(Square::G6),
                        (Square::F6, Direction::W) => Some(Square::E6),
                        (Square::F6, Direction::NW) => Some(Square::E7),
                        (Square::F6, Direction::NE) => Some(Square::G7),
                        (Square::F6, Direction::SW) => Some(Square::E5),
                        (Square::F6, Direction::SE) => Some(Square::G5),
                        (Square::G6, Direction::N) => Some(Square::G7),
                        (Square::G6, Direction::S) => Some(Square::G5),
                        (Square::G6, Direction::E) => Some(Square::H6),
                        (Square::G6, Direction::W) => Some(Square::F6),
                        (Square::G6, Direction::NW) => Some(Square::F7),
                        (Square::G6, Direction::NE) => Some(Square::H7),
                        (Square::G6, Direction::SW) => Some(Square::F5),
                        (Square::G6, Direction::SE) => Some(Square::H5),
                        (Square::H6, Direction::N) => Some(Square::H7),
                        (Square::H6, Direction::S) => Some(Square::H5),
                        (Square::H6, Direction::E) => None,
                        (Square::H6, Direction::W) => Some(Square::G6),
                        (Square::H6, Direction::NW) => Some(Square::G7),
                        (Square::H6, Direction::NE) => None,
                        (Square::H6, Direction::SW) => Some(Square::G5),
                        (Square::H6, Direction::SE) => None,
                        (Square::A7, Direction::N) => Some(Square::A8),
                        (Square::A7, Direction::S) => Some(Square::A6),
                        (Square::A7, Direction::E) => Some(Square::B7),
                        (Square::A7, Direction::W) => None,
                        (Square::A7, Direction::NW) => None,
                        (Square::A7, Direction::NE) => Some(Square::B8),
                        (Square::A7, Direction::SW) => None,
                        (Square::A7, Direction::SE) => Some(Square::B6),
                        (Square::B7, Direction::N) => Some(Square::B8),
                        (Square::B7, Direction::S) => Some(Square::B6),
                        (Square::B7, Direction::E) => Some(Square::C7),
                        (Square::B7, Direction::W) => Some(Square::A7),
                        (Square::B7, Direction::NW) => Some(Square::A8),
                        (Square::B7, Direction::NE) => Some(Square::C8),
                        (Square::B7, Direction::SW) => Some(Square::A6),
                        (Square::B7, Direction::SE) => Some(Square::C6),
                        (Square::C7, Direction::N) => Some(Square::C8),
                        (Square::C7, Direction::S) => Some(Square::C6),
                        (Square::C7, Direction::E) => Some(Square::D7),
                        (Square::C7, Direction::W) => Some(Square::B7),
                        (Square::C7, Direction::NW) => Some(Square::B8),
                        (Square::C7, Direction::NE) => Some(Square::D8),
                        (Square::C7, Direction::SW) => Some(Square::B6),
                        (Square::C7, Direction::SE) => Some(Square::D6),
                        (Square::D7, Direction::N) => Some(Square::D8),
                        (Square::D7, Direction::S) => Some(Square::D6),
                        (Square::D7, Direction::E) => Some(Square::E7),
                        (Square::D7, Direction::W) => Some(Square::C7),
                        (Square::D7, Direction::NW) => Some(Square::C8),
                        (Square::D7, Direction::NE) => Some(Square::E8),
                        (Square::D7, Direction::SW) => Some(Square::C6),
                        (Square::D7, Direction::SE) => Some(Square::E6),
                        (Square::E7, Direction::N) => Some(Square::E8),
                        (Square::E7, Direction::S) => Some(Square::E6),
                        (Square::E7, Direction::E) => Some(Square::F7),
                        (Square::E7, Direction::W) => Some(Square::D7),
                        (Square::E7, Direction::NW) => Some(Square::D8),
                        (Square::E7, Direction::NE) => Some(Square::F8),
                        (Square::E7, Direction::SW) => Some(Square::D6),
                        (Square::E7, Direction::SE) => Some(Square::F6),
                        (Square::F7, Direction::N) => Some(Square::F8),
                        (Square::F7, Direction::S) => Some(Square::F6),
                        (Square::F7, Direction::E) => Some(Square::G7),
                        (Square::F7, Direction::W) => Some(Square::E7),
                        (Square::F7, Direction::NW) => Some(Square::E8),
                        (Square::F7, Direction::NE) => Some(Square::G8),
                        (Square::F7, Direction::SW) => Some(Square::E6),
                        (Square::F7, Direction::SE) => Some(Square::G6),
                        (Square::G7, Direction::N) => Some(Square::G8),
                        (Square::G7, Direction::S) => Some(Square::G6),
                        (Square::G7, Direction::E) => Some(Square::H7),
                        (Square::G7, Direction::W) => Some(Square::F7),
                        (Square::G7, Direction::NW) => Some(Square::F8),
                        (Square::G7, Direction::NE) => Some(Square::H8),
                        (Square::G7, Direction::SW) => Some(Square::F6),
                        (Square::G7, Direction::SE) => Some(Square::H6),
                        (Square::H7, Direction::N) => Some(Square::H8),
                        (Square::H7, Direction::S) => Some(Square::H6),
                        (Square::H7, Direction::E) => None,
                        (Square::H7, Direction::W) => Some(Square::G7),
                        (Square::H7, Direction::NW) => Some(Square::G8),
                        (Square::H7, Direction::NE) => None,
                        (Square::H7, Direction::SW) => Some(Square::G6),
                        (Square::H7, Direction::SE) => None,
                        (Square::A8, Direction::N) => None,
                        (Square::A8, Direction::S) => Some(Square::A7),
                        (Square::A8, Direction::E) => Some(Square::B8),
                        (Square::A8, Direction::W) => None,
                        (Square::A8, Direction::NW) => None,
                        (Square::A8, Direction::NE) => None,
                        (Square::A8, Direction::SW) => None,
                        (Square::A8, Direction::SE) => Some(Square::B7),
                        (Square::B8, Direction::N) => None,
                        (Square::B8, Direction::S) => Some(Square::B7),
                        (Square::B8, Direction::E) => Some(Square::C8),
                        (Square::B8, Direction::W) => Some(Square::A8),
                        (Square::B8, Direction::NW) => None,
                        (Square::B8, Direction::NE) => None,
                        (Square::B8, Direction::SW) => Some(Square::A7),
                        (Square::B8, Direction::SE) => Some(Square::C7),
                        (Square::C8, Direction::N) => None,
                        (Square::C8, Direction::S) => Some(Square::C7),
                        (Square::C8, Direction::E) => Some(Square::D8),
                        (Square::C8, Direction::W) => Some(Square::B8),
                        (Square::C8, Direction::NW) => None,
                        (Square::C8, Direction::NE) => None,
                        (Square::C8, Direction::SW) => Some(Square::B7),
                        (Square::C8, Direction::SE) => Some(Square::D7),
                        (Square::D8, Direction::N) => None,
                        (Square::D8, Direction::S) => Some(Square::D7),
                        (Square::D8, Direction::E) => Some(Square::E8),
                        (Square::D8, Direction::W) => Some(Square::C8),
                        (Square::D8, Direction::NW) => None,
                        (Square::D8, Direction::NE) => None,
                        (Square::D8, Direction::SW) => Some(Square::C7),
                        (Square::D8, Direction::SE) => Some(Square::E7),
                        (Square::E8, Direction::N) => None,
                        (Square::E8, Direction::S) => Some(Square::E7),
                        (Square::E8, Direction::E) => Some(Square::F8),
                        (Square::E8, Direction::W) => Some(Square::D8),
                        (Square::E8, Direction::NW) => None,
                        (Square::E8, Direction::NE) => None,
                        (Square::E8, Direction::SW) => Some(Square::D7),
                        (Square::E8, Direction::SE) => Some(Square::F7),
                        (Square::F8, Direction::N) => None,
                        (Square::F8, Direction::S) => Some(Square::F7),
                        (Square::F8, Direction::E) => Some(Square::G8),
                        (Square::F8, Direction::W) => Some(Square::E8),
                        (Square::F8, Direction::NW) => None,
                        (Square::F8, Direction::NE) => None,
                        (Square::F8, Direction::SW) => Some(Square::E7),
                        (Square::F8, Direction::SE) => Some(Square::G7),
                        (Square::G8, Direction::N) => None,
                        (Square::G8, Direction::S) => Some(Square::G7),
                        (Square::G8, Direction::E) => Some(Square::H8),
                        (Square::G8, Direction::W) => Some(Square::F8),
                        (Square::G8, Direction::NW) => None,
                        (Square::G8, Direction::NE) => None,
                        (Square::G8, Direction::SW) => Some(Square::F7),
                        (Square::G8, Direction::SE) => Some(Square::H7),
                        (Square::H8, Direction::N) => None,
                        (Square::H8, Direction::S) => Some(Square::H7),
                        (Square::H8, Direction::E) => None,
                        (Square::H8, Direction::W) => Some(Square::G8),
                        (Square::H8, Direction::NW) => None,
                        (Square::H8, Direction::NE) => None,
                        (Square::H8, Direction::SW) => Some(Square::G7),
                        (Square::H8, Direction::SE) => None                        
                    }
                }
                _ => {
                        return None;
                }
            }
        }
        return cur;
    }

    pub fn knight_hop(&self, kh : KnightHop) -> Option<Square> {
        let mut cur = Some(*self);
        match (cur) {
            Some(x) => {
                cur = match (x, kh) {
                    (Square::A1, KnightHop::NNW) => None,
                    (Square::A1, KnightHop::NNE) => Some(Square::B3),
                    (Square::A1, KnightHop::NWW) => None,
                    (Square::A1, KnightHop::NEE) => Some(Square::C2),
                    (Square::A1, KnightHop::SSW) => None,
                    (Square::A1, KnightHop::SSE) => None,
                    (Square::A1, KnightHop::SWW) => None,
                    (Square::A1, KnightHop::SEE) => None,
                    (Square::B1, KnightHop::NNW) => Some(Square::A3),
                    (Square::B1, KnightHop::NNE) => Some(Square::C3),
                    (Square::B1, KnightHop::NWW) => None,
                    (Square::B1, KnightHop::NEE) => Some(Square::D2),
                    (Square::B1, KnightHop::SSW) => None,
                    (Square::B1, KnightHop::SSE) => None,
                    (Square::B1, KnightHop::SWW) => None,
                    (Square::B1, KnightHop::SEE) => None,
                    (Square::C1, KnightHop::NNW) => Some(Square::B3),
                    (Square::C1, KnightHop::NNE) => Some(Square::D3),
                    (Square::C1, KnightHop::NWW) => Some(Square::A2),
                    (Square::C1, KnightHop::NEE) => Some(Square::E2),
                    (Square::C1, KnightHop::SSW) => None,
                    (Square::C1, KnightHop::SSE) => None,
                    (Square::C1, KnightHop::SWW) => None,
                    (Square::C1, KnightHop::SEE) => None,
                    (Square::D1, KnightHop::NNW) => Some(Square::C3),
                    (Square::D1, KnightHop::NNE) => Some(Square::E3),
                    (Square::D1, KnightHop::NWW) => Some(Square::B2),
                    (Square::D1, KnightHop::NEE) => Some(Square::F2),
                    (Square::D1, KnightHop::SSW) => None,
                    (Square::D1, KnightHop::SSE) => None,
                    (Square::D1, KnightHop::SWW) => None,
                    (Square::D1, KnightHop::SEE) => None,
                    (Square::E1, KnightHop::NNW) => Some(Square::D3),
                    (Square::E1, KnightHop::NNE) => Some(Square::F3),
                    (Square::E1, KnightHop::NWW) => Some(Square::C2),
                    (Square::E1, KnightHop::NEE) => Some(Square::G2),
                    (Square::E1, KnightHop::SSW) => None,
                    (Square::E1, KnightHop::SSE) => None,
                    (Square::E1, KnightHop::SWW) => None,
                    (Square::E1, KnightHop::SEE) => None,
                    (Square::F1, KnightHop::NNW) => Some(Square::E3),
                    (Square::F1, KnightHop::NNE) => Some(Square::G3),
                    (Square::F1, KnightHop::NWW) => Some(Square::D2),
                    (Square::F1, KnightHop::NEE) => Some(Square::H2),
                    (Square::F1, KnightHop::SSW) => None,
                    (Square::F1, KnightHop::SSE) => None,
                    (Square::F1, KnightHop::SWW) => None,
                    (Square::F1, KnightHop::SEE) => None,
                    (Square::G1, KnightHop::NNW) => Some(Square::F3),
                    (Square::G1, KnightHop::NNE) => Some(Square::H3),
                    (Square::G1, KnightHop::NWW) => Some(Square::E2),
                    (Square::G1, KnightHop::NEE) => None,
                    (Square::G1, KnightHop::SSW) => None,
                    (Square::G1, KnightHop::SSE) => None,
                    (Square::G1, KnightHop::SWW) => None,
                    (Square::G1, KnightHop::SEE) => None,
                    (Square::H1, KnightHop::NNW) => Some(Square::G3),
                    (Square::H1, KnightHop::NNE) => None,
                    (Square::H1, KnightHop::NWW) => Some(Square::F2),
                    (Square::H1, KnightHop::NEE) => None,
                    (Square::H1, KnightHop::SSW) => None,
                    (Square::H1, KnightHop::SSE) => None,
                    (Square::H1, KnightHop::SWW) => None,
                    (Square::H1, KnightHop::SEE) => None,
                    (Square::A2, KnightHop::NNW) => None,
                    (Square::A2, KnightHop::NNE) => Some(Square::B4),
                    (Square::A2, KnightHop::NWW) => None,
                    (Square::A2, KnightHop::NEE) => Some(Square::C3),
                    (Square::A2, KnightHop::SSW) => None,
                    (Square::A2, KnightHop::SSE) => None,
                    (Square::A2, KnightHop::SWW) => None,
                    (Square::A2, KnightHop::SEE) => Some(Square::C1),
                    (Square::B2, KnightHop::NNW) => Some(Square::A4),
                    (Square::B2, KnightHop::NNE) => Some(Square::C4),
                    (Square::B2, KnightHop::NWW) => None,
                    (Square::B2, KnightHop::NEE) => Some(Square::D3),
                    (Square::B2, KnightHop::SSW) => None,
                    (Square::B2, KnightHop::SSE) => None,
                    (Square::B2, KnightHop::SWW) => None,
                    (Square::B2, KnightHop::SEE) => Some(Square::D1),
                    (Square::C2, KnightHop::NNW) => Some(Square::B4),
                    (Square::C2, KnightHop::NNE) => Some(Square::D4),
                    (Square::C2, KnightHop::NWW) => Some(Square::A3),
                    (Square::C2, KnightHop::NEE) => Some(Square::E3),
                    (Square::C2, KnightHop::SSW) => None,
                    (Square::C2, KnightHop::SSE) => None,
                    (Square::C2, KnightHop::SWW) => Some(Square::A1),
                    (Square::C2, KnightHop::SEE) => Some(Square::E1),
                    (Square::D2, KnightHop::NNW) => Some(Square::C4),
                    (Square::D2, KnightHop::NNE) => Some(Square::E4),
                    (Square::D2, KnightHop::NWW) => Some(Square::B3),
                    (Square::D2, KnightHop::NEE) => Some(Square::F3),
                    (Square::D2, KnightHop::SSW) => None,
                    (Square::D2, KnightHop::SSE) => None,
                    (Square::D2, KnightHop::SWW) => Some(Square::B1),
                    (Square::D2, KnightHop::SEE) => Some(Square::F1),
                    (Square::E2, KnightHop::NNW) => Some(Square::D4),
                    (Square::E2, KnightHop::NNE) => Some(Square::F4),
                    (Square::E2, KnightHop::NWW) => Some(Square::C3),
                    (Square::E2, KnightHop::NEE) => Some(Square::G3),
                    (Square::E2, KnightHop::SSW) => None,
                    (Square::E2, KnightHop::SSE) => None,
                    (Square::E2, KnightHop::SWW) => Some(Square::C1),
                    (Square::E2, KnightHop::SEE) => Some(Square::G1),
                    (Square::F2, KnightHop::NNW) => Some(Square::E4),
                    (Square::F2, KnightHop::NNE) => Some(Square::G4),
                    (Square::F2, KnightHop::NWW) => Some(Square::D3),
                    (Square::F2, KnightHop::NEE) => Some(Square::H3),
                    (Square::F2, KnightHop::SSW) => None,
                    (Square::F2, KnightHop::SSE) => None,
                    (Square::F2, KnightHop::SWW) => Some(Square::D1),
                    (Square::F2, KnightHop::SEE) => Some(Square::H1),
                    (Square::G2, KnightHop::NNW) => Some(Square::F4),
                    (Square::G2, KnightHop::NNE) => Some(Square::H4),
                    (Square::G2, KnightHop::NWW) => Some(Square::E3),
                    (Square::G2, KnightHop::NEE) => None,
                    (Square::G2, KnightHop::SSW) => None,
                    (Square::G2, KnightHop::SSE) => None,
                    (Square::G2, KnightHop::SWW) => Some(Square::E1),
                    (Square::G2, KnightHop::SEE) => None,
                    (Square::H2, KnightHop::NNW) => Some(Square::G4),
                    (Square::H2, KnightHop::NNE) => None,
                    (Square::H2, KnightHop::NWW) => Some(Square::F3),
                    (Square::H2, KnightHop::NEE) => None,
                    (Square::H2, KnightHop::SSW) => None,
                    (Square::H2, KnightHop::SSE) => None,
                    (Square::H2, KnightHop::SWW) => Some(Square::F1),
                    (Square::H2, KnightHop::SEE) => None,
                    (Square::A3, KnightHop::NNW) => None,
                    (Square::A3, KnightHop::NNE) => Some(Square::B5),
                    (Square::A3, KnightHop::NWW) => None,
                    (Square::A3, KnightHop::NEE) => Some(Square::C4),
                    (Square::A3, KnightHop::SSW) => None,
                    (Square::A3, KnightHop::SSE) => Some(Square::B1),
                    (Square::A3, KnightHop::SWW) => None,
                    (Square::A3, KnightHop::SEE) => Some(Square::C2),
                    (Square::B3, KnightHop::NNW) => Some(Square::A5),
                    (Square::B3, KnightHop::NNE) => Some(Square::C5),
                    (Square::B3, KnightHop::NWW) => None,
                    (Square::B3, KnightHop::NEE) => Some(Square::D4),
                    (Square::B3, KnightHop::SSW) => Some(Square::A1),
                    (Square::B3, KnightHop::SSE) => Some(Square::C1),
                    (Square::B3, KnightHop::SWW) => None,
                    (Square::B3, KnightHop::SEE) => Some(Square::D2),
                    (Square::C3, KnightHop::NNW) => Some(Square::B5),
                    (Square::C3, KnightHop::NNE) => Some(Square::D5),
                    (Square::C3, KnightHop::NWW) => Some(Square::A4),
                    (Square::C3, KnightHop::NEE) => Some(Square::E4),
                    (Square::C3, KnightHop::SSW) => Some(Square::B1),
                    (Square::C3, KnightHop::SSE) => Some(Square::D1),
                    (Square::C3, KnightHop::SWW) => Some(Square::A2),
                    (Square::C3, KnightHop::SEE) => Some(Square::E2),
                    (Square::D3, KnightHop::NNW) => Some(Square::C5),
                    (Square::D3, KnightHop::NNE) => Some(Square::E5),
                    (Square::D3, KnightHop::NWW) => Some(Square::B4),
                    (Square::D3, KnightHop::NEE) => Some(Square::F4),
                    (Square::D3, KnightHop::SSW) => Some(Square::C1),
                    (Square::D3, KnightHop::SSE) => Some(Square::E1),
                    (Square::D3, KnightHop::SWW) => Some(Square::B2),
                    (Square::D3, KnightHop::SEE) => Some(Square::F2),
                    (Square::E3, KnightHop::NNW) => Some(Square::D5),
                    (Square::E3, KnightHop::NNE) => Some(Square::F5),
                    (Square::E3, KnightHop::NWW) => Some(Square::C4),
                    (Square::E3, KnightHop::NEE) => Some(Square::G4),
                    (Square::E3, KnightHop::SSW) => Some(Square::D1),
                    (Square::E3, KnightHop::SSE) => Some(Square::F1),
                    (Square::E3, KnightHop::SWW) => Some(Square::C2),
                    (Square::E3, KnightHop::SEE) => Some(Square::G2),
                    (Square::F3, KnightHop::NNW) => Some(Square::E5),
                    (Square::F3, KnightHop::NNE) => Some(Square::G5),
                    (Square::F3, KnightHop::NWW) => Some(Square::D4),
                    (Square::F3, KnightHop::NEE) => Some(Square::H4),
                    (Square::F3, KnightHop::SSW) => Some(Square::E1),
                    (Square::F3, KnightHop::SSE) => Some(Square::G1),
                    (Square::F3, KnightHop::SWW) => Some(Square::D2),
                    (Square::F3, KnightHop::SEE) => Some(Square::H2),
                    (Square::G3, KnightHop::NNW) => Some(Square::F5),
                    (Square::G3, KnightHop::NNE) => Some(Square::H5),
                    (Square::G3, KnightHop::NWW) => Some(Square::E4),
                    (Square::G3, KnightHop::NEE) => None,
                    (Square::G3, KnightHop::SSW) => Some(Square::F1),
                    (Square::G3, KnightHop::SSE) => Some(Square::H1),
                    (Square::G3, KnightHop::SWW) => Some(Square::E2),
                    (Square::G3, KnightHop::SEE) => None,
                    (Square::H3, KnightHop::NNW) => Some(Square::G5),
                    (Square::H3, KnightHop::NNE) => None,
                    (Square::H3, KnightHop::NWW) => Some(Square::F4),
                    (Square::H3, KnightHop::NEE) => None,
                    (Square::H3, KnightHop::SSW) => Some(Square::G1),
                    (Square::H3, KnightHop::SSE) => None,
                    (Square::H3, KnightHop::SWW) => Some(Square::F2),
                    (Square::H3, KnightHop::SEE) => None,
                    (Square::A4, KnightHop::NNW) => None,
                    (Square::A4, KnightHop::NNE) => Some(Square::B6),
                    (Square::A4, KnightHop::NWW) => None,
                    (Square::A4, KnightHop::NEE) => Some(Square::C5),
                    (Square::A4, KnightHop::SSW) => None,
                    (Square::A4, KnightHop::SSE) => Some(Square::B2),
                    (Square::A4, KnightHop::SWW) => None,
                    (Square::A4, KnightHop::SEE) => Some(Square::C3),
                    (Square::B4, KnightHop::NNW) => Some(Square::A6),
                    (Square::B4, KnightHop::NNE) => Some(Square::C6),
                    (Square::B4, KnightHop::NWW) => None,
                    (Square::B4, KnightHop::NEE) => Some(Square::D5),
                    (Square::B4, KnightHop::SSW) => Some(Square::A2),
                    (Square::B4, KnightHop::SSE) => Some(Square::C2),
                    (Square::B4, KnightHop::SWW) => None,
                    (Square::B4, KnightHop::SEE) => Some(Square::D3),
                    (Square::C4, KnightHop::NNW) => Some(Square::B6),
                    (Square::C4, KnightHop::NNE) => Some(Square::D6),
                    (Square::C4, KnightHop::NWW) => Some(Square::A5),
                    (Square::C4, KnightHop::NEE) => Some(Square::E5),
                    (Square::C4, KnightHop::SSW) => Some(Square::B2),
                    (Square::C4, KnightHop::SSE) => Some(Square::D2),
                    (Square::C4, KnightHop::SWW) => Some(Square::A3),
                    (Square::C4, KnightHop::SEE) => Some(Square::E3),
                    (Square::D4, KnightHop::NNW) => Some(Square::C6),
                    (Square::D4, KnightHop::NNE) => Some(Square::E6),
                    (Square::D4, KnightHop::NWW) => Some(Square::B5),
                    (Square::D4, KnightHop::NEE) => Some(Square::F5),
                    (Square::D4, KnightHop::SSW) => Some(Square::C2),
                    (Square::D4, KnightHop::SSE) => Some(Square::E2),
                    (Square::D4, KnightHop::SWW) => Some(Square::B3),
                    (Square::D4, KnightHop::SEE) => Some(Square::F3),
                    (Square::E4, KnightHop::NNW) => Some(Square::D6),
                    (Square::E4, KnightHop::NNE) => Some(Square::F6),
                    (Square::E4, KnightHop::NWW) => Some(Square::C5),
                    (Square::E4, KnightHop::NEE) => Some(Square::G5),
                    (Square::E4, KnightHop::SSW) => Some(Square::D2),
                    (Square::E4, KnightHop::SSE) => Some(Square::F2),
                    (Square::E4, KnightHop::SWW) => Some(Square::C3),
                    (Square::E4, KnightHop::SEE) => Some(Square::G3),
                    (Square::F4, KnightHop::NNW) => Some(Square::E6),
                    (Square::F4, KnightHop::NNE) => Some(Square::G6),
                    (Square::F4, KnightHop::NWW) => Some(Square::D5),
                    (Square::F4, KnightHop::NEE) => Some(Square::H5),
                    (Square::F4, KnightHop::SSW) => Some(Square::E2),
                    (Square::F4, KnightHop::SSE) => Some(Square::G2),
                    (Square::F4, KnightHop::SWW) => Some(Square::D3),
                    (Square::F4, KnightHop::SEE) => Some(Square::H3),
                    (Square::G4, KnightHop::NNW) => Some(Square::F6),
                    (Square::G4, KnightHop::NNE) => Some(Square::H6),
                    (Square::G4, KnightHop::NWW) => Some(Square::E5),
                    (Square::G4, KnightHop::NEE) => None,
                    (Square::G4, KnightHop::SSW) => Some(Square::F2),
                    (Square::G4, KnightHop::SSE) => Some(Square::H2),
                    (Square::G4, KnightHop::SWW) => Some(Square::E3),
                    (Square::G4, KnightHop::SEE) => None,
                    (Square::H4, KnightHop::NNW) => Some(Square::G6),
                    (Square::H4, KnightHop::NNE) => None,
                    (Square::H4, KnightHop::NWW) => Some(Square::F5),
                    (Square::H4, KnightHop::NEE) => None,
                    (Square::H4, KnightHop::SSW) => Some(Square::G2),
                    (Square::H4, KnightHop::SSE) => None,
                    (Square::H4, KnightHop::SWW) => Some(Square::F3),
                    (Square::H4, KnightHop::SEE) => None,
                    (Square::A5, KnightHop::NNW) => None,
                    (Square::A5, KnightHop::NNE) => Some(Square::B7),
                    (Square::A5, KnightHop::NWW) => None,
                    (Square::A5, KnightHop::NEE) => Some(Square::C6),
                    (Square::A5, KnightHop::SSW) => None,
                    (Square::A5, KnightHop::SSE) => Some(Square::B3),
                    (Square::A5, KnightHop::SWW) => None,
                    (Square::A5, KnightHop::SEE) => Some(Square::C4),
                    (Square::B5, KnightHop::NNW) => Some(Square::A7),
                    (Square::B5, KnightHop::NNE) => Some(Square::C7),
                    (Square::B5, KnightHop::NWW) => None,
                    (Square::B5, KnightHop::NEE) => Some(Square::D6),
                    (Square::B5, KnightHop::SSW) => Some(Square::A3),
                    (Square::B5, KnightHop::SSE) => Some(Square::C3),
                    (Square::B5, KnightHop::SWW) => None,
                    (Square::B5, KnightHop::SEE) => Some(Square::D4),
                    (Square::C5, KnightHop::NNW) => Some(Square::B7),
                    (Square::C5, KnightHop::NNE) => Some(Square::D7),
                    (Square::C5, KnightHop::NWW) => Some(Square::A6),
                    (Square::C5, KnightHop::NEE) => Some(Square::E6),
                    (Square::C5, KnightHop::SSW) => Some(Square::B3),
                    (Square::C5, KnightHop::SSE) => Some(Square::D3),
                    (Square::C5, KnightHop::SWW) => Some(Square::A4),
                    (Square::C5, KnightHop::SEE) => Some(Square::E4),
                    (Square::D5, KnightHop::NNW) => Some(Square::C7),
                    (Square::D5, KnightHop::NNE) => Some(Square::E7),
                    (Square::D5, KnightHop::NWW) => Some(Square::B6),
                    (Square::D5, KnightHop::NEE) => Some(Square::F6),
                    (Square::D5, KnightHop::SSW) => Some(Square::C3),
                    (Square::D5, KnightHop::SSE) => Some(Square::E3),
                    (Square::D5, KnightHop::SWW) => Some(Square::B4),
                    (Square::D5, KnightHop::SEE) => Some(Square::F4),
                    (Square::E5, KnightHop::NNW) => Some(Square::D7),
                    (Square::E5, KnightHop::NNE) => Some(Square::F7),
                    (Square::E5, KnightHop::NWW) => Some(Square::C6),
                    (Square::E5, KnightHop::NEE) => Some(Square::G6),
                    (Square::E5, KnightHop::SSW) => Some(Square::D3),
                    (Square::E5, KnightHop::SSE) => Some(Square::F3),
                    (Square::E5, KnightHop::SWW) => Some(Square::C4),
                    (Square::E5, KnightHop::SEE) => Some(Square::G4),
                    (Square::F5, KnightHop::NNW) => Some(Square::E7),
                    (Square::F5, KnightHop::NNE) => Some(Square::G7),
                    (Square::F5, KnightHop::NWW) => Some(Square::D6),
                    (Square::F5, KnightHop::NEE) => Some(Square::H6),
                    (Square::F5, KnightHop::SSW) => Some(Square::E3),
                    (Square::F5, KnightHop::SSE) => Some(Square::G3),
                    (Square::F5, KnightHop::SWW) => Some(Square::D4),
                    (Square::F5, KnightHop::SEE) => Some(Square::H4),
                    (Square::G5, KnightHop::NNW) => Some(Square::F7),
                    (Square::G5, KnightHop::NNE) => Some(Square::H7),
                    (Square::G5, KnightHop::NWW) => Some(Square::E6),
                    (Square::G5, KnightHop::NEE) => None,
                    (Square::G5, KnightHop::SSW) => Some(Square::F3),
                    (Square::G5, KnightHop::SSE) => Some(Square::H3),
                    (Square::G5, KnightHop::SWW) => Some(Square::E4),
                    (Square::G5, KnightHop::SEE) => None,
                    (Square::H5, KnightHop::NNW) => Some(Square::G7),
                    (Square::H5, KnightHop::NNE) => None,
                    (Square::H5, KnightHop::NWW) => Some(Square::F6),
                    (Square::H5, KnightHop::NEE) => None,
                    (Square::H5, KnightHop::SSW) => Some(Square::G3),
                    (Square::H5, KnightHop::SSE) => None,
                    (Square::H5, KnightHop::SWW) => Some(Square::F4),
                    (Square::H5, KnightHop::SEE) => None,
                    (Square::A6, KnightHop::NNW) => None,
                    (Square::A6, KnightHop::NNE) => Some(Square::B8),
                    (Square::A6, KnightHop::NWW) => None,
                    (Square::A6, KnightHop::NEE) => Some(Square::C7),
                    (Square::A6, KnightHop::SSW) => None,
                    (Square::A6, KnightHop::SSE) => Some(Square::B4),
                    (Square::A6, KnightHop::SWW) => None,
                    (Square::A6, KnightHop::SEE) => Some(Square::C5),
                    (Square::B6, KnightHop::NNW) => Some(Square::A8),
                    (Square::B6, KnightHop::NNE) => Some(Square::C8),
                    (Square::B6, KnightHop::NWW) => None,
                    (Square::B6, KnightHop::NEE) => Some(Square::D7),
                    (Square::B6, KnightHop::SSW) => Some(Square::A4),
                    (Square::B6, KnightHop::SSE) => Some(Square::C4),
                    (Square::B6, KnightHop::SWW) => None,
                    (Square::B6, KnightHop::SEE) => Some(Square::D5),
                    (Square::C6, KnightHop::NNW) => Some(Square::B8),
                    (Square::C6, KnightHop::NNE) => Some(Square::D8),
                    (Square::C6, KnightHop::NWW) => Some(Square::A7),
                    (Square::C6, KnightHop::NEE) => Some(Square::E7),
                    (Square::C6, KnightHop::SSW) => Some(Square::B4),
                    (Square::C6, KnightHop::SSE) => Some(Square::D4),
                    (Square::C6, KnightHop::SWW) => Some(Square::A5),
                    (Square::C6, KnightHop::SEE) => Some(Square::E5),
                    (Square::D6, KnightHop::NNW) => Some(Square::C8),
                    (Square::D6, KnightHop::NNE) => Some(Square::E8),
                    (Square::D6, KnightHop::NWW) => Some(Square::B7),
                    (Square::D6, KnightHop::NEE) => Some(Square::F7),
                    (Square::D6, KnightHop::SSW) => Some(Square::C4),
                    (Square::D6, KnightHop::SSE) => Some(Square::E4),
                    (Square::D6, KnightHop::SWW) => Some(Square::B5),
                    (Square::D6, KnightHop::SEE) => Some(Square::F5),
                    (Square::E6, KnightHop::NNW) => Some(Square::D8),
                    (Square::E6, KnightHop::NNE) => Some(Square::F8),
                    (Square::E6, KnightHop::NWW) => Some(Square::C7),
                    (Square::E6, KnightHop::NEE) => Some(Square::G7),
                    (Square::E6, KnightHop::SSW) => Some(Square::D4),
                    (Square::E6, KnightHop::SSE) => Some(Square::F4),
                    (Square::E6, KnightHop::SWW) => Some(Square::C5),
                    (Square::E6, KnightHop::SEE) => Some(Square::G5),
                    (Square::F6, KnightHop::NNW) => Some(Square::E8),
                    (Square::F6, KnightHop::NNE) => Some(Square::G8),
                    (Square::F6, KnightHop::NWW) => Some(Square::D7),
                    (Square::F6, KnightHop::NEE) => Some(Square::H7),
                    (Square::F6, KnightHop::SSW) => Some(Square::E4),
                    (Square::F6, KnightHop::SSE) => Some(Square::G4),
                    (Square::F6, KnightHop::SWW) => Some(Square::D5),
                    (Square::F6, KnightHop::SEE) => Some(Square::H5),
                    (Square::G6, KnightHop::NNW) => Some(Square::F8),
                    (Square::G6, KnightHop::NNE) => Some(Square::H8),
                    (Square::G6, KnightHop::NWW) => Some(Square::E7),
                    (Square::G6, KnightHop::NEE) => None,
                    (Square::G6, KnightHop::SSW) => Some(Square::F4),
                    (Square::G6, KnightHop::SSE) => Some(Square::H4),
                    (Square::G6, KnightHop::SWW) => Some(Square::E5),
                    (Square::G6, KnightHop::SEE) => None,
                    (Square::H6, KnightHop::NNW) => Some(Square::G8),
                    (Square::H6, KnightHop::NNE) => None,
                    (Square::H6, KnightHop::NWW) => Some(Square::F7),
                    (Square::H6, KnightHop::NEE) => None,
                    (Square::H6, KnightHop::SSW) => Some(Square::G4),
                    (Square::H6, KnightHop::SSE) => None,
                    (Square::H6, KnightHop::SWW) => Some(Square::F5),
                    (Square::H6, KnightHop::SEE) => None,
                    (Square::A7, KnightHop::NNW) => None,
                    (Square::A7, KnightHop::NNE) => None,
                    (Square::A7, KnightHop::NWW) => None,
                    (Square::A7, KnightHop::NEE) => Some(Square::C8),
                    (Square::A7, KnightHop::SSW) => None,
                    (Square::A7, KnightHop::SSE) => Some(Square::B5),
                    (Square::A7, KnightHop::SWW) => None,
                    (Square::A7, KnightHop::SEE) => Some(Square::C6),
                    (Square::B7, KnightHop::NNW) => None,
                    (Square::B7, KnightHop::NNE) => None,
                    (Square::B7, KnightHop::NWW) => None,
                    (Square::B7, KnightHop::NEE) => Some(Square::D8),
                    (Square::B7, KnightHop::SSW) => Some(Square::A5),
                    (Square::B7, KnightHop::SSE) => Some(Square::C5),
                    (Square::B7, KnightHop::SWW) => None,
                    (Square::B7, KnightHop::SEE) => Some(Square::D6),
                    (Square::C7, KnightHop::NNW) => None,
                    (Square::C7, KnightHop::NNE) => None,
                    (Square::C7, KnightHop::NWW) => Some(Square::A8),
                    (Square::C7, KnightHop::NEE) => Some(Square::E8),
                    (Square::C7, KnightHop::SSW) => Some(Square::B5),
                    (Square::C7, KnightHop::SSE) => Some(Square::D5),
                    (Square::C7, KnightHop::SWW) => Some(Square::A6),
                    (Square::C7, KnightHop::SEE) => Some(Square::E6),
                    (Square::D7, KnightHop::NNW) => None,
                    (Square::D7, KnightHop::NNE) => None,
                    (Square::D7, KnightHop::NWW) => Some(Square::B8),
                    (Square::D7, KnightHop::NEE) => Some(Square::F8),
                    (Square::D7, KnightHop::SSW) => Some(Square::C5),
                    (Square::D7, KnightHop::SSE) => Some(Square::E5),
                    (Square::D7, KnightHop::SWW) => Some(Square::B6),
                    (Square::D7, KnightHop::SEE) => Some(Square::F6),
                    (Square::E7, KnightHop::NNW) => None,
                    (Square::E7, KnightHop::NNE) => None,
                    (Square::E7, KnightHop::NWW) => Some(Square::C8),
                    (Square::E7, KnightHop::NEE) => Some(Square::G8),
                    (Square::E7, KnightHop::SSW) => Some(Square::D5),
                    (Square::E7, KnightHop::SSE) => Some(Square::F5),
                    (Square::E7, KnightHop::SWW) => Some(Square::C6),
                    (Square::E7, KnightHop::SEE) => Some(Square::G6),
                    (Square::F7, KnightHop::NNW) => None,
                    (Square::F7, KnightHop::NNE) => None,
                    (Square::F7, KnightHop::NWW) => Some(Square::D8),
                    (Square::F7, KnightHop::NEE) => Some(Square::H8),
                    (Square::F7, KnightHop::SSW) => Some(Square::E5),
                    (Square::F7, KnightHop::SSE) => Some(Square::G5),
                    (Square::F7, KnightHop::SWW) => Some(Square::D6),
                    (Square::F7, KnightHop::SEE) => Some(Square::H6),
                    (Square::G7, KnightHop::NNW) => None,
                    (Square::G7, KnightHop::NNE) => None,
                    (Square::G7, KnightHop::NWW) => Some(Square::E8),
                    (Square::G7, KnightHop::NEE) => None,
                    (Square::G7, KnightHop::SSW) => Some(Square::F5),
                    (Square::G7, KnightHop::SSE) => Some(Square::H5),
                    (Square::G7, KnightHop::SWW) => Some(Square::E6),
                    (Square::G7, KnightHop::SEE) => None,
                    (Square::H7, KnightHop::NNW) => None,
                    (Square::H7, KnightHop::NNE) => None,
                    (Square::H7, KnightHop::NWW) => Some(Square::F8),
                    (Square::H7, KnightHop::NEE) => None,
                    (Square::H7, KnightHop::SSW) => Some(Square::G5),
                    (Square::H7, KnightHop::SSE) => None,
                    (Square::H7, KnightHop::SWW) => Some(Square::F6),
                    (Square::H7, KnightHop::SEE) => None,
                    (Square::A8, KnightHop::NNW) => None,
                    (Square::A8, KnightHop::NNE) => None,
                    (Square::A8, KnightHop::NWW) => None,
                    (Square::A8, KnightHop::NEE) => None,
                    (Square::A8, KnightHop::SSW) => None,
                    (Square::A8, KnightHop::SSE) => Some(Square::B6),
                    (Square::A8, KnightHop::SWW) => None,
                    (Square::A8, KnightHop::SEE) => Some(Square::C7),
                    (Square::B8, KnightHop::NNW) => None,
                    (Square::B8, KnightHop::NNE) => None,
                    (Square::B8, KnightHop::NWW) => None,
                    (Square::B8, KnightHop::NEE) => None,
                    (Square::B8, KnightHop::SSW) => Some(Square::A6),
                    (Square::B8, KnightHop::SSE) => Some(Square::C6),
                    (Square::B8, KnightHop::SWW) => None,
                    (Square::B8, KnightHop::SEE) => Some(Square::D7),
                    (Square::C8, KnightHop::NNW) => None,
                    (Square::C8, KnightHop::NNE) => None,
                    (Square::C8, KnightHop::NWW) => None,
                    (Square::C8, KnightHop::NEE) => None,
                    (Square::C8, KnightHop::SSW) => Some(Square::B6),
                    (Square::C8, KnightHop::SSE) => Some(Square::D6),
                    (Square::C8, KnightHop::SWW) => Some(Square::A7),
                    (Square::C8, KnightHop::SEE) => Some(Square::E7),
                    (Square::D8, KnightHop::NNW) => None,
                    (Square::D8, KnightHop::NNE) => None,
                    (Square::D8, KnightHop::NWW) => None,
                    (Square::D8, KnightHop::NEE) => None,
                    (Square::D8, KnightHop::SSW) => Some(Square::C6),
                    (Square::D8, KnightHop::SSE) => Some(Square::E6),
                    (Square::D8, KnightHop::SWW) => Some(Square::B7),
                    (Square::D8, KnightHop::SEE) => Some(Square::F7),
                    (Square::E8, KnightHop::NNW) => None,
                    (Square::E8, KnightHop::NNE) => None,
                    (Square::E8, KnightHop::NWW) => None,
                    (Square::E8, KnightHop::NEE) => None,
                    (Square::E8, KnightHop::SSW) => Some(Square::D6),
                    (Square::E8, KnightHop::SSE) => Some(Square::F6),
                    (Square::E8, KnightHop::SWW) => Some(Square::C7),
                    (Square::E8, KnightHop::SEE) => Some(Square::G7),
                    (Square::F8, KnightHop::NNW) => None,
                    (Square::F8, KnightHop::NNE) => None,
                    (Square::F8, KnightHop::NWW) => None,
                    (Square::F8, KnightHop::NEE) => None,
                    (Square::F8, KnightHop::SSW) => Some(Square::E6),
                    (Square::F8, KnightHop::SSE) => Some(Square::G6),
                    (Square::F8, KnightHop::SWW) => Some(Square::D7),
                    (Square::F8, KnightHop::SEE) => Some(Square::H7),
                    (Square::G8, KnightHop::NNW) => None,
                    (Square::G8, KnightHop::NNE) => None,
                    (Square::G8, KnightHop::NWW) => None,
                    (Square::G8, KnightHop::NEE) => None,
                    (Square::G8, KnightHop::SSW) => Some(Square::F6),
                    (Square::G8, KnightHop::SSE) => Some(Square::H6),
                    (Square::G8, KnightHop::SWW) => Some(Square::E7),
                    (Square::G8, KnightHop::SEE) => None,
                    (Square::H8, KnightHop::NNW) => None,
                    (Square::H8, KnightHop::NNE) => None,
                    (Square::H8, KnightHop::NWW) => None,
                    (Square::H8, KnightHop::NEE) => None,
                    (Square::H8, KnightHop::SSW) => Some(Square::G6),
                    (Square::H8, KnightHop::SSE) => None,
                    (Square::H8, KnightHop::SWW) => Some(Square::F7),
                    (Square::H8, KnightHop::SEE) => None                                  
                }
            }
            _ => {
                return None;
            }
        }
        return cur;
    }

    pub fn mirror(&self) -> Square {
        return match (self) {
            Square::A1 => Square::A8,
            Square::B1 => Square::B8,
            Square::C1 => Square::C8,
            Square::D1 => Square::D8,
            Square::E1 => Square::E8,
            Square::F1 => Square::F8,
            Square::G1 => Square::G8,
            Square::H1 => Square::H8,
            Square::A2 => Square::A7,
            Square::B2 => Square::B7,
            Square::C2 => Square::C7,
            Square::D2 => Square::D7,
            Square::E2 => Square::E7,
            Square::F2 => Square::F7,
            Square::G2 => Square::G7,
            Square::H2 => Square::H7,
            Square::A3 => Square::A6,
            Square::B3 => Square::B6,
            Square::C3 => Square::C6,
            Square::D3 => Square::D6,
            Square::E3 => Square::E6,
            Square::F3 => Square::F6,
            Square::G3 => Square::G6,
            Square::H3 => Square::H6,
            Square::A4 => Square::A5,
            Square::B4 => Square::B5,
            Square::C4 => Square::C5,
            Square::D4 => Square::D5,
            Square::E4 => Square::E5,
            Square::F4 => Square::F5,
            Square::G4 => Square::G5,
            Square::H4 => Square::H5,
            Square::A5 => Square::A4,
            Square::B5 => Square::B4,
            Square::C5 => Square::C4,
            Square::D5 => Square::D4,
            Square::E5 => Square::E4,
            Square::F5 => Square::F4,
            Square::G5 => Square::G4,
            Square::H5 => Square::H4,
            Square::A6 => Square::A3,
            Square::B6 => Square::B3,
            Square::C6 => Square::C3,
            Square::D6 => Square::D3,
            Square::E6 => Square::E3,
            Square::F6 => Square::F3,
            Square::G6 => Square::G3,
            Square::H6 => Square::H3,
            Square::A7 => Square::A2,
            Square::B7 => Square::B2,
            Square::C7 => Square::C2,
            Square::D7 => Square::D2,
            Square::E7 => Square::E2,
            Square::F7 => Square::F2,
            Square::G7 => Square::G2,
            Square::H7 => Square::H2,
            Square::A8 => Square::A1,
            Square::B8 => Square::B1,
            Square::C8 => Square::C1,
            Square::D8 => Square::D1,
            Square::E8 => Square::E1,
            Square::F8 => Square::F1,
            Square::G8 => Square::G1,
            Square::H8 => Square::H1
        }
    }
}

impl Move {
    pub fn from_uci(m: &str) -> Option<Move> {
        let mlen = m.len();
        if mlen < 4 {
            return None;
        }
        let fs = Square::from_uci(&m[0..2]);
        let ts = Square::from_uci(&m[2..4]);
        let pt = if mlen >= 5 { PieceType::from_char(m.chars().nth(4).unwrap()) } else { PieceType::Null };
        return match (fs, ts) {
            (Some(x), Some(y)) => Some(Move {
                from_square: x,
                to_square: y,
                promote_type: pt
            }),
            _ => None
        }
    }

    pub fn to_uci(&self) -> String {
        let fs = self.from_square.to_uci();
        let ts = self.to_square.to_uci();
        if self.promote_type == PieceType::Null {
            return format!("{}{}", fs, ts);
        } else {
            return format!("{}{}{}", fs, ts, self.promote_type.to_char());
        }
    }
}

impl Piece {
    // returns the material value of a piece, in centipawns
    pub fn get_material_value(&self, gp : GamePhase) -> i32 {
        let sq = if self.color == Color::White {self.square} else {self.square.mirror()};
        return match (self.piece_type, sq, gp) {
            (PieceType::King, Square::G1, GamePhase::Middlegame) => 50050,
            (PieceType::King, Square::H1, GamePhase::Middlegame) => 50050,
            (PieceType::King, Square::A1, GamePhase::Middlegame) => 50050,
            (PieceType::King, Square::B1, GamePhase::Middlegame) => 50050,
            (PieceType::King, Square::C1, GamePhase::Middlegame) => 50030,
            (PieceType::King, Square::A1, GamePhase::Endgame) => 49940,
            (PieceType::King, Square::B1, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::C1, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::D1, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::E1, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::F1, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::G1, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::H1, GamePhase::Endgame) => 49940,
            (PieceType::King, Square::A2, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::B2, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::C2, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::D2, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::E2, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::F2, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::G2, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::H2, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::A3, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::B3, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::C3, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::D3, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::E3, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::F3, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::G3, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::H3, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::A4, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::B4, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::C4, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::D4, GamePhase::Endgame) => 50000,
            (PieceType::King, Square::E4, GamePhase::Endgame) => 50000,
            (PieceType::King, Square::F4, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::G4, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::H4, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::A5, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::B5, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::C5, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::D5, GamePhase::Endgame) => 50000,
            (PieceType::King, Square::E5, GamePhase::Endgame) => 50000,
            (PieceType::King, Square::F5, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::G5, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::H5, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::A6, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::B6, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::C6, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::D6, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::E6, GamePhase::Endgame) => 49990,
            (PieceType::King, Square::F6, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::G6, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::H6, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::A7, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::B7, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::C7, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::D7, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::E7, GamePhase::Endgame) => 49980,
            (PieceType::King, Square::F7, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::G7, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::H7, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::A8, GamePhase::Endgame) => 49940,
            (PieceType::King, Square::B8, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::C8, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::D8, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::E8, GamePhase::Endgame) => 49970,
            (PieceType::King, Square::F8, GamePhase::Endgame) => 49960,
            (PieceType::King, Square::G8, GamePhase::Endgame) => 49950,
            (PieceType::King, Square::H8, GamePhase::Endgame) => 49940,
            (PieceType::King, _, _) => 50000,
            (PieceType::Queen, _, _) => 940,
            (PieceType::Rook, _, _) => 510,
            (PieceType::Bishop, Square::A1, _) => 315,
            (PieceType::Bishop, Square::B1, _) => 325,
            (PieceType::Bishop, Square::C1, _) => 325,
            (PieceType::Bishop, Square::D1, _) => 325,
            (PieceType::Bishop, Square::E1, _) => 325,
            (PieceType::Bishop, Square::F1, _) => 325,
            (PieceType::Bishop, Square::G1, _) => 325,
            (PieceType::Bishop, Square::H1, _) => 315,
            (PieceType::Bishop, Square::A2, _) => 325,
            (PieceType::Bishop, Square::B2, _) => 335,
            (PieceType::Bishop, Square::C2, _) => 336,
            (PieceType::Bishop, Square::D2, _) => 340,
            (PieceType::Bishop, Square::E2, _) => 340,
            (PieceType::Bishop, Square::F2, _) => 336,
            (PieceType::Bishop, Square::G2, _) => 335,
            (PieceType::Bishop, Square::H2, _) => 325,
            (PieceType::Bishop, Square::A3, _) => 325,
            (PieceType::Bishop, Square::B3, _) => 336,
            (PieceType::Bishop, Square::C3, _) => 337,
            (PieceType::Bishop, Square::D3, _) => 341,
            (PieceType::Bishop, Square::E3, _) => 341,
            (PieceType::Bishop, Square::F3, _) => 337,
            (PieceType::Bishop, Square::G3, _) => 336,
            (PieceType::Bishop, Square::H3, _) => 325,
            (PieceType::Bishop, Square::A4, _) => 325,
            (PieceType::Bishop, Square::B4, _) => 340,
            (PieceType::Bishop, Square::C4, _) => 341,
            (PieceType::Bishop, Square::D4, _) => 345,
            (PieceType::Bishop, Square::E4, _) => 345,
            (PieceType::Bishop, Square::F4, _) => 341,
            (PieceType::Bishop, Square::G4, _) => 340,
            (PieceType::Bishop, Square::H4, _) => 325,
            (PieceType::Bishop, Square::A5, _) => 325,
            (PieceType::Bishop, Square::B5, _) => 340,
            (PieceType::Bishop, Square::C5, _) => 341,
            (PieceType::Bishop, Square::D5, _) => 345,
            (PieceType::Bishop, Square::E5, _) => 345,
            (PieceType::Bishop, Square::F5, _) => 341,
            (PieceType::Bishop, Square::G5, _) => 340,
            (PieceType::Bishop, Square::H5, _) => 325,
            (PieceType::Bishop, Square::A6, _) => 325,
            (PieceType::Bishop, Square::B6, _) => 336,
            (PieceType::Bishop, Square::C6, _) => 337,
            (PieceType::Bishop, Square::D6, _) => 341,
            (PieceType::Bishop, Square::E6, _) => 341,
            (PieceType::Bishop, Square::F6, _) => 337,
            (PieceType::Bishop, Square::G6, _) => 336,
            (PieceType::Bishop, Square::H6, _) => 325,
            (PieceType::Bishop, Square::A7, _) => 325,
            (PieceType::Bishop, Square::B7, _) => 335,
            (PieceType::Bishop, Square::C7, _) => 336,
            (PieceType::Bishop, Square::D7, _) => 340,
            (PieceType::Bishop, Square::E7, _) => 340,
            (PieceType::Bishop, Square::F7, _) => 336,
            (PieceType::Bishop, Square::G7, _) => 335,
            (PieceType::Bishop, Square::H7, _) => 325,
            (PieceType::Bishop, Square::A8, _) => 315,
            (PieceType::Bishop, Square::B8, _) => 325,
            (PieceType::Bishop, Square::C8, _) => 325,
            (PieceType::Bishop, Square::D8, _) => 325,
            (PieceType::Bishop, Square::E8, _) => 325,
            (PieceType::Bishop, Square::F8, _) => 325,
            (PieceType::Bishop, Square::G8, _) => 325,
            (PieceType::Bishop, Square::H8, _) => 315,
            (PieceType::Knight, Square::A1, _) => 250,
            (PieceType::Knight, Square::B1, _) => 265,
            (PieceType::Knight, Square::C1, _) => 280,
            (PieceType::Knight, Square::D1, _) => 280,
            (PieceType::Knight, Square::E1, _) => 280,
            (PieceType::Knight, Square::F1, _) => 280,
            (PieceType::Knight, Square::G1, _) => 265,
            (PieceType::Knight, Square::H1, _) => 250,
            (PieceType::Knight, Square::A2, _) => 280,
            (PieceType::Knight, Square::B2, _) => 295,
            (PieceType::Knight, Square::C2, _) => 315,
            (PieceType::Knight, Square::D2, _) => 325,
            (PieceType::Knight, Square::E2, _) => 325,
            (PieceType::Knight, Square::F2, _) => 315,
            (PieceType::Knight, Square::G2, _) => 295,
            (PieceType::Knight, Square::H2, _) => 280,
            (PieceType::Knight, Square::A3, _) => 280,
            (PieceType::Knight, Square::B3, _) => 295,
            (PieceType::Knight, Square::C3, _) => 315,
            (PieceType::Knight, Square::D3, _) => 325,
            (PieceType::Knight, Square::E3, _) => 325,
            (PieceType::Knight, Square::F3, _) => 315,
            (PieceType::Knight, Square::G3, _) => 295,
            (PieceType::Knight, Square::H3, _) => 280,
            (PieceType::Knight, Square::A4, _) => 280,
            (PieceType::Knight, Square::B4, _) => 305,
            (PieceType::Knight, Square::C4, _) => 335,
            (PieceType::Knight, Square::D4, _) => 345,
            (PieceType::Knight, Square::E4, _) => 345,
            (PieceType::Knight, Square::F4, _) => 335,
            (PieceType::Knight, Square::G4, _) => 305,
            (PieceType::Knight, Square::H4, _) => 280,
            (PieceType::Knight, Square::A5, _) => 280,
            (PieceType::Knight, Square::B5, _) => 305,
            (PieceType::Knight, Square::C5, _) => 335,
            (PieceType::Knight, Square::D5, _) => 345,
            (PieceType::Knight, Square::E5, _) => 345,
            (PieceType::Knight, Square::F5, _) => 335,
            (PieceType::Knight, Square::G5, _) => 305,
            (PieceType::Knight, Square::H5, _) => 280,
            (PieceType::Knight, Square::A6, _) => 280,
            (PieceType::Knight, Square::B6, _) => 305,
            (PieceType::Knight, Square::C6, _) => 335,
            (PieceType::Knight, Square::D6, _) => 345,
            (PieceType::Knight, Square::E6, _) => 345,
            (PieceType::Knight, Square::F6, _) => 335,
            (PieceType::Knight, Square::G6, _) => 305,
            (PieceType::Knight, Square::H6, _) => 280,
            (PieceType::Knight, Square::A7, _) => 280,
            (PieceType::Knight, Square::B7, _) => 295,
            (PieceType::Knight, Square::C7, _) => 315,
            (PieceType::Knight, Square::D7, _) => 325,
            (PieceType::Knight, Square::E7, _) => 325,
            (PieceType::Knight, Square::F7, _) => 315,
            (PieceType::Knight, Square::G7, _) => 295,
            (PieceType::Knight, Square::H7, _) => 280,
            (PieceType::Knight, Square::A8, _) => 280,
            (PieceType::Knight, Square::B8, _) => 295,
            (PieceType::Knight, Square::C8, _) => 310,
            (PieceType::Knight, Square::D8, _) => 310,
            (PieceType::Knight, Square::E8, _) => 310,
            (PieceType::Knight, Square::F8, _) => 310,
            (PieceType::Knight, Square::G8, _) => 295,
            (PieceType::Knight, Square::H8, _) => 280,            
            (PieceType::Pawn, Square::A1, _) => 90,
            (PieceType::Pawn, Square::B1, _) => 90,
            (PieceType::Pawn, Square::C1, _) => 100,
            (PieceType::Pawn, Square::D1, _) => 110,
            (PieceType::Pawn, Square::E1, _) => 110,
            (PieceType::Pawn, Square::F1, _) => 100,
            (PieceType::Pawn, Square::G1, _) => 90,
            (PieceType::Pawn, Square::H1, _) => 90,
            (PieceType::Pawn, Square::A2, _) => 90,
            (PieceType::Pawn, Square::B2, _) => 90,
            (PieceType::Pawn, Square::C2, _) => 100,
            (PieceType::Pawn, Square::D2, _) => 45,
            (PieceType::Pawn, Square::E2, _) => 45,
            (PieceType::Pawn, Square::F2, _) => 100,
            (PieceType::Pawn, Square::G2, _) => 90,
            (PieceType::Pawn, Square::H2, _) => 90,
            (PieceType::Pawn, Square::A3, _) => 90,
            (PieceType::Pawn, Square::B3, _) => 90,
            (PieceType::Pawn, Square::C3, _) => 100,
            (PieceType::Pawn, Square::D3, _) => 110,
            (PieceType::Pawn, Square::E3, _) => 110,
            (PieceType::Pawn, Square::F3, _) => 100,
            (PieceType::Pawn, Square::G3, _) => 90,
            (PieceType::Pawn, Square::H3, _) => 90,
            (PieceType::Pawn, Square::A4, _) => 95,
            (PieceType::Pawn, Square::B4, _) => 95,
            (PieceType::Pawn, Square::C4, _) => 105,
            (PieceType::Pawn, Square::D4, _) => 115,
            (PieceType::Pawn, Square::E4, _) => 115,
            (PieceType::Pawn, Square::F4, _) => 105,
            (PieceType::Pawn, Square::G4, _) => 95,
            (PieceType::Pawn, Square::H4, _) => 95,
            (PieceType::Pawn, Square::A5, _) => 100,
            (PieceType::Pawn, Square::B5, _) => 100,
            (PieceType::Pawn, Square::C5, _) => 110,
            (PieceType::Pawn, Square::D5, _) => 120,
            (PieceType::Pawn, Square::E5, _) => 120,
            (PieceType::Pawn, Square::F5, _) => 110,
            (PieceType::Pawn, Square::G5, _) => 100,
            (PieceType::Pawn, Square::H5, _) => 100,
            (PieceType::Pawn, Square::A6, _) => 105,
            (PieceType::Pawn, Square::B6, _) => 105,
            (PieceType::Pawn, Square::C6, _) => 115,
            (PieceType::Pawn, Square::D6, _) => 125,
            (PieceType::Pawn, Square::E6, _) => 125,
            (PieceType::Pawn, Square::F6, _) => 115,
            (PieceType::Pawn, Square::G6, _) => 105,
            (PieceType::Pawn, Square::H6, _) => 105,
            (PieceType::Pawn, Square::A7, _) => 150,
            (PieceType::Pawn, Square::B7, _) => 150,
            (PieceType::Pawn, Square::C7, _) => 160,
            (PieceType::Pawn, Square::D7, _) => 170,
            (PieceType::Pawn, Square::E7, _) => 170,
            (PieceType::Pawn, Square::F7, _) => 160,
            (PieceType::Pawn, Square::G7, _) => 150,
            (PieceType::Pawn, Square::H7, _) => 150,
            (PieceType::Pawn, Square::A8, _) => 90,
            (PieceType::Pawn, Square::B8, _) => 90,
            (PieceType::Pawn, Square::C8, _) => 100,
            (PieceType::Pawn, Square::D8, _) => 110,
            (PieceType::Pawn, Square::E8, _) => 110,
            (PieceType::Pawn, Square::F8, _) => 100,
            (PieceType::Pawn, Square::G8, _) => 90,
            (PieceType::Pawn, Square::H8, _) => 90,
            
            _ => 0
        }
    }
    pub fn to_char(&self) -> char {
        return match (self.color, self.piece_type) {
            (Color::White, PieceType::King) => 'k',
            (Color::White, PieceType::Queen) => 'q',
            (Color::White, PieceType::Rook) => 'r',
            (Color::White, PieceType::Bishop) => 'b',
            (Color::White, PieceType::Knight) => 'n',
            (Color::White, PieceType::Pawn) => 'p',
            (Color::Black, PieceType::King) => 'K',
            (Color::Black, PieceType::Queen) => 'Q',
            (Color::Black, PieceType::Rook) => 'R',
            (Color::Black, PieceType::Bishop) => 'B',
            (Color::Black, PieceType::Knight) => 'N',
            (Color::Black, PieceType::Pawn) => 'P',
            _ => '.'
        }
    }
}

impl PieceType {
    pub fn from_char(c: char) -> PieceType {
        return match c {
            'K' => PieceType::King,
            'k' => PieceType::King,
            'Q' => PieceType::Queen,
            'q' => PieceType::Queen,
            'R' => PieceType::Rook,
            'r' => PieceType::Rook,
            'B' => PieceType::Bishop,
            'b' => PieceType::Bishop,
            'N' => PieceType::Knight,
            'n' => PieceType::Knight,
            'P' => PieceType::Pawn,
            'p' => PieceType::Pawn,
            _ => PieceType::Null
        }
    }

    pub fn to_char(&self) -> char {
        return match self {
            PieceType::King => 'k',
            PieceType::Queen => 'q',
            PieceType::Rook => 'r',
            PieceType::Bishop => 'b',
            PieceType::Knight => 'n',
            PieceType::Pawn => 'p',
            _ => '.'
        }
    }
}

impl Direction {
    pub fn mirror(&self) -> Direction {
        return match self {
            Direction::N => Direction::S,
            Direction::S => Direction::N,
            Direction::E => Direction::E,
            Direction::W => Direction::W,
            Direction::NE => Direction::SE,
            Direction::NW => Direction::SW,
            Direction::SE => Direction::NE,
            Direction::SW => Direction::NW
        }
    }

    pub fn rel(&self, c: Color) -> Direction {
        return if c == Color::White { *self } else { self.mirror() };
    }
}